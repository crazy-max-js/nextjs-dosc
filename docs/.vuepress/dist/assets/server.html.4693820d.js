import{_ as a,r as c,o as d,c as i,b as e,d as o,e as t,a as s}from"./app.1ad2624e.js";const r={},l=s('<h1 id="next-server" tabindex="-1"><a class="header-anchor" href="#next-server" aria-hidden="true">#</a> next/server</h1><p><code>next/server</code>provides server-only helpers for use in<a href="/docs/middleware">Middleware</a>and<a href="/docs/guide/api-routes/edge-api-routes">Edge API Routes</a>.</p><h2 id="nextrequest" tabindex="-1"><a class="header-anchor" href="#nextrequest" aria-hidden="true">#</a> NextRequest</h2>',3),p=e("code",null,"NextRequest",-1),u={href:"https://developer.mozilla.org/en-US/docs/Web/API/Request",target:"_blank",rel:"noopener noreferrer"},h=e("code",null,"Request",-1),_=e("code",null,"cookies",-1),k={href:"https://edge-runtime.vercel.app/packages/cookies#for-request",target:"_blank",rel:"noopener noreferrer"},f=e("code",null,"Request",-1),m=e("code",null,"Cookie",-1),g=e("a",{href:"/docs/guide/advanced-features/middleware#using-cookies"},"Using cookies in Middleware",-1),v=e("code",null,"get",-1),w=e("code",null,"name",-1),b=e("code",null,"name",-1),y=e("code",null,"value",-1),x=e("code",null,"name",-1),T=e("code",null,"undefined",-1),R=e("code",null,"getAll",-1),q=e("code",null,"get",-1),N=e("code",null,"name",-1),A=e("code",null,"name",-1),I=e("code",null,"set",-1),P=e("code",null,"CookieListItem",-1),S={href:"https://wicg.github.io/cookie-store/#dictdef-cookielistitem",target:"_blank",rel:"noopener noreferrer"},E=e("code",null,"delete",-1),U=e("code",null,"name",-1),C=e("code",null,"true",-1),j=e("code",null,"false",-1),L=e("code",null,"has",-1),O=e("code",null,"name",-1),W=e("code",null,"boolean",-1),F=e("code",null,"true",-1),M=e("code",null,"false",-1),G=e("code",null,"clear",-1),H=e("code",null,"Cookie",-1),V=e("code",null,"nextUrl",-1),z=e("code",null,"pathname",-1),B=e("code",null,"basePath",-1),K=e("code",null,"trailingSlash",-1),D=e("code",null,"i18n",-1),J=e("code",null,"basePath",-1),Q=e("code",null,"string",-1),Y=e("code",null,"buildId",-1),X=e("code",null,"string || undefined",-1),Z=e("code",null,"defaultLocale",-1),$=e("code",null,"string || undefined",-1),ee=e("code",null,"domainLocale",-1),oe=e("code",null,"defaultLocale",-1),ne=e("code",null,"string",-1),te=e("code",null,"domain",-1),se=e("code",null,"string",-1),ae=e("code",null,"http",-1),ce=e("code",null,"boolean || undefined",-1),de=e("code",null,"locales",-1),ie=e("code",null,"string[] || undefined",-1),re=e("code",null,"locale",-1),le=e("code",null,"string || undefined",-1),pe=e("code",null,"url",-1),ue=e("code",null,"URL",-1),he=e("code",null,"ip",-1),_e=e("code",null,"string || undefined",-1),ke=e("code",null,"Request",-1),fe=e("code",null,"geo",-1),me=e("code",null,"Request",-1),ge=e("code",null,"city",-1),ve=e("code",null,"string || undefined",-1),we=e("code",null,"country",-1),be=e("code",null,"string || undefined",-1),ye=e("code",null,"region",-1),xe=e("code",null,"string || undefined",-1),Te=e("code",null,"latitude",-1),Re=e("code",null,"string || undefined",-1),qe=e("code",null,"longitude",-1),Ne=e("code",null,"string || undefined",-1),Ae=s(`<p>You can use the<code>NextRequest</code>object as a direct replacement for the native<code>Request</code>interface, giving you more control over how you manipulate the request.</p><p><code>NextRequest</code>can be imported from<code>next/server</code>:</p><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> NextRequest <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next/server&#39;</span>

</code></pre></div><h2 id="nextfetchevent" tabindex="-1"><a class="header-anchor" href="#nextfetchevent" aria-hidden="true">#</a> NextFetchEvent</h2>`,4),Ie=e("code",null,"NextFetchEvent",-1),Pe={href:"https://developer.mozilla.org/en-US/docs/Web/API/FetchEvent",target:"_blank",rel:"noopener noreferrer"},Se=e("code",null,"FetchEvent",-1),Ee={href:"https://developer.mozilla.org/en-US/docs/Web/API/ExtendableEvent/waitUntil",target:"_blank",rel:"noopener noreferrer"},Ue=e("code",null,"waitUntil()",-1),Ce=s(`<p>The<code>waitUntil()</code>method can be used to prolong the execution of the function if you have other background work to make.</p><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> NextResponse <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next/server&#39;</span>
<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> NextFetchEvent<span class="token punctuation">,</span> NextRequest <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next/server&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">middleware</span><span class="token punctuation">(</span>req<span class="token operator">:</span> NextRequest<span class="token punctuation">,</span> event<span class="token operator">:</span> NextFetchEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  event<span class="token punctuation">.</span><span class="token function">waitUntil</span><span class="token punctuation">(</span>
    <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;https://my-analytics-platform.com&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      method<span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
      body<span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> pathname<span class="token operator">:</span> req<span class="token punctuation">.</span>nextUrl<span class="token punctuation">.</span>pathname <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>

  <span class="token keyword">return</span> NextResponse<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre></div><p>The<code>NextFetchEvent</code>object can be imported from<code>next/server</code>:</p><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> NextFetchEvent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next/server&#39;</span>

</code></pre></div><h2 id="nextresponse" tabindex="-1"><a class="header-anchor" href="#nextresponse" aria-hidden="true">#</a> NextResponse</h2>`,5),je=e("code",null,"NextResponse",-1),Le={href:"https://developer.mozilla.org/en-US/docs/Web/API/Response",target:"_blank",rel:"noopener noreferrer"},Oe=e("code",null,"Response",-1),We=e("h3",{id:"public-methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#public-methods","aria-hidden":"true"},"#"),o(" Public Methods")],-1),Fe=e("p",null,[o("Public methods are available on an instance of the"),e("code",null,"NextResponse"),o("class. Depending on your use case, you can create an instance and assign to a variable, then access the following public methods:")],-1),Me=e("code",null,"cookies",-1),Ge={href:"https://edge-runtime.vercel.app/packages/cookies#for-response",target:"_blank",rel:"noopener noreferrer"},He=e("code",null,"Response",-1),Ve={href:"https://edge-runtime.vercel.app/packages/cookies#for-response",target:"_blank",rel:"noopener noreferrer"},ze=e("code",null,"Response",-1),Be=e("code",null,"Set-Cookie",-1),Ke=e("a",{href:"/docs/guide/advanced-features/middleware#using-cookies"},"Using cookies in Middleware",-1),De=e("code",null,"get",-1),Je=e("code",null,"name",-1),Qe=e("code",null,"name",-1),Ye=e("code",null,"value",-1),Xe=e("code",null,"name",-1),Ze=e("code",null,"undefined",-1),$e=e("code",null,"getAll",-1),eo=e("code",null,"get",-1),oo=e("code",null,"name",-1),no=e("code",null,"name",-1),to=e("code",null,"set",-1),so=e("code",null,"CookieListItem",-1),ao={href:"https://wicg.github.io/cookie-store/#dictdef-cookielistitem",target:"_blank",rel:"noopener noreferrer"},co=e("code",null,"delete",-1),io=e("code",null,"name",-1),ro=e("code",null,"true",-1),lo=e("code",null,"false",-1),po=s(`<h3 id="static-methods" tabindex="-1"><a class="header-anchor" href="#static-methods" aria-hidden="true">#</a> Static Methods</h3><p>The following static methods are available on the<code>NextResponse</code>class directly:</p><ul><li><code>redirect()</code>- Returns a<code>NextResponse</code>with a redirect set- <code>rewrite()</code>- Returns a<code>NextResponse</code>with a rewrite set- <code>next()</code>- Returns a<code>NextResponse</code>that will continue the middleware chain</li></ul><p>To use the methods above,<strong>you must return the<code>NextResponse</code>object</strong>returned.<code>NextResponse</code>can be imported from<code>next/server</code>:</p><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> NextResponse <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next/server&#39;</span>

</code></pre></div><h2 id="useragent" tabindex="-1"><a class="header-anchor" href="#useragent" aria-hidden="true">#</a> userAgent</h2><p>The<code>userAgent</code>helper allows you to interact with the user agent object from the request. It is abstracted from the native<code>Request</code>object, and is an opt in feature. It has the following properties:</p><ul><li><code>isBot</code>: (<code>boolean</code>) Whether the request comes from a known bot- <code>browser</code>- <code>name</code>: (<code>string || undefined</code>) The name of the browser- <code>version</code>: (<code>string || undefined</code>) The version of the browser, determined dynamically- <code>device</code>- <code>model</code>: (<code>string || undefined</code>) The model of the device, determined dynamically- <code>type</code>: (<code>string || undefined</code>) The type of the browser, can be one of the following values:<code>console</code>,<code>mobile</code>,<code>tablet</code>,<code>smarttv</code>,<code>wearable</code>,<code>embedded</code>, or<code>undefined</code>- <code>vendor</code>: (<code>string || undefined</code>) The vendor of the device, determined dynamically- <code>engine</code>- <code>name</code>: (<code>string || undefined</code>) The name of the browser engine, could be one of the following values:<code>Amaya</code>,<code>Blink</code>,<code>EdgeHTML</code>,<code>Flow</code>,<code>Gecko</code>,<code>Goanna</code>,<code>iCab</code>,<code>KHTML</code>,<code>Links</code>,<code>Lynx</code>,<code>NetFront</code>,<code>NetSurf</code>,<code>Presto</code>,<code>Tasman</code>,<code>Trident</code>,<code>w3m</code>,<code>WebKit</code>or<code>undefined</code>- <code>version</code>: (<code>string || undefined</code>) The version of the browser engine, determined dynamically, or<code>undefined</code>- <code>os</code>- <code>name</code>: (<code>string || undefined</code>) The name of the OS, could be<code>undefined</code>- <code>version</code>: (<code>string || undefined</code>) The version of the OS, determined dynamically, or<code>undefined</code>- <code>cpu</code>- <code>architecture</code>: (<code>string || undefined</code>) The architecture of the CPU, could be one of the following values:<code>68k</code>,<code>amd64</code>,<code>arm</code>,<code>arm64</code>,<code>armhf</code>,<code>avr</code>,<code>ia32</code>,<code>ia64</code>,<code>irix</code>,<code>irix64</code>,<code>mips</code>,<code>mips64</code>,<code>pa-risc</code>,<code>ppc</code>,<code>sparc</code>,<code>sparc64</code>or<code>undefined</code></li></ul><p><code>userAgent</code>can be imported from<code>next/server</code>:</p><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> userAgent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next/server&#39;</span>

</code></pre></div><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> NextRequest<span class="token punctuation">,</span> NextResponse<span class="token punctuation">,</span> userAgent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next/server&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">middleware</span><span class="token punctuation">(</span>request<span class="token operator">:</span> NextRequest<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> url <span class="token operator">=</span> request<span class="token punctuation">.</span>nextUrl
  <span class="token keyword">const</span> <span class="token punctuation">{</span> device <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">userAgent</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span>
  <span class="token keyword">const</span> viewport <span class="token operator">=</span> device<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&#39;mobile&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;mobile&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;desktop&#39;</span>
  url<span class="token punctuation">.</span>searchParams<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;viewport&#39;</span><span class="token punctuation">,</span> viewport<span class="token punctuation">)</span>
  <span class="token keyword">return</span> NextResponse<span class="token punctuation">.</span><span class="token function">rewrite</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre></div><h2 id="faq" tabindex="-1"><a class="header-anchor" href="#faq" aria-hidden="true">#</a> FAQ</h2><h3 id="why-does-redirect-use-307-and-308" tabindex="-1"><a class="header-anchor" href="#why-does-redirect-use-307-and-308" aria-hidden="true">#</a> Why does redirect use 307 and 308?</h3><p>When using<code>redirect()</code>you may notice that the status codes used are<code>307</code>for a temporary redirect, and<code>308</code>for a permanent redirect. While traditionally a<code>302</code>was used for a temporary redirect, and a<code>301</code>for a permanent redirect, many browsers changed the request method of the redirect, from a<code>POST</code>to<code>GET</code>request when using a<code>302</code>, regardless of the origins request method.</p><p>Taking the following example of a redirect from<code>/users</code>to<code>/people</code>, if you make a<code>POST</code>request to<code>/users</code>to create a new user, and are conforming to a<code>302</code>temporary redirect, the request method will be changed from a<code>POST</code>to a<code>GET</code>request. This doesn&#39;t make sense, as to create a new user, you should be making a<code>POST</code>request to<code>/people</code>, and not a<code>GET</code>request.</p><p>The introduction of the<code>307</code>status code means that the request method is preserved as<code>POST</code>.</p><ul><li><code>302</code>- Temporary redirect, will change the request method from<code>POST</code>to<code>GET</code>- <code>307</code>- Temporary redirect, will preserve the request method as<code>POST</code></li></ul><p>The<code>redirect()</code>method uses a<code>307</code>by default, instead of a<code>302</code>temporary redirect, meaning your requests willalwaysbe preserved as<code>POST</code>requests.</p><p>If you want to cause a<code>GET</code>response to a<code>POST</code>request, use<code>303</code>.</p>`,19),uo={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Redirections",target:"_blank",rel:"noopener noreferrer"},ho=s('<h3 id="how-do-i-access-environment-variables" tabindex="-1"><a class="header-anchor" href="#how-do-i-access-environment-variables" aria-hidden="true">#</a> How do I access Environment Variables?</h3><p><code>p<wbr>rocess.env</code>can be used to access<a href="/docs/guide/basic-features/environment-variables">Environment Variables</a>from Edge Middleware. They are evaluated during<code>next build</code>:</p><h2 id="related" tabindex="-1"><a class="header-anchor" href="#related" aria-hidden="true">#</a> Related</h2>',3);function _o(ko,fo){const n=c("ExternalLinkIcon");return d(),i("div",null,[l,e("p",null,[o("The"),p,o("object is an extension of the native"),e("a",u,[h,t(n)]),o("interface, with the following added methods and properties:")]),e("ul",null,[e("li",null,[_,o("- A"),e("a",k,[o("RequestCookies"),t(n)]),o("instance with cookies from the"),f,o(". It reads/mutates the"),m,o("header of the request. See also"),g,o(".- "),v,o("- A method that takes a cookie"),w,o("and returns an object with"),b,o("and"),y,o(". If a cookie with"),x,o("isn't found, it returns"),T,o(". If multiple cookies match, it will only return the first match.- "),R,o("- A method that is similar to"),q,o(", but returns a list of all the cookies with a matching"),N,o(". If"),A,o("is unspecified, it returns all the available cookies.- "),I,o("- A method that takes an object with properties of"),P,o("as defined in the"),e("a",S,[o("W3C CookieStore API"),t(n)]),o("spec.- "),E,o("- A method that takes either a cookie"),U,o("or a list of names. and removes the cookies matching the name(s). Returns"),C,o("for deleted and"),j,o("for undeleted cookies.- "),L,o("- A method that takes a cookie"),O,o("and returns a"),W,o("based on if the cookie exists ("),F,o(") or not ("),M,o(").- "),G,o("- A method that takes no argument and will effectively remove the"),H,o("header.- "),V,o(": Includes an extended, parsed, URL object that gives you access to Next.js specific properties such as"),z,o(","),B,o(","),K,o("and"),D,o(". Includes the following properties:- "),J,o("("),Q,o(")- "),Y,o("("),X,o(")- "),Z,o("("),$,o(")- "),ee,o("- "),oe,o(": ("),ne,o(")- "),te,o(": ("),se,o(")- "),ae,o(": ("),ce,o(")- "),de,o(": ("),ie,o(")- "),re,o("("),le,o(")- "),pe,o("("),ue,o(")- "),he,o(": ("),_e,o(") - Has the IP address of the"),ke,o(". This information is provided by your hosting platform.- "),fe,o("- Has the geographic location from the"),me,o(". This information is provided by your hosting platform. Includes the following properties:- "),ge,o("("),ve,o(")- "),we,o("("),be,o(")- "),ye,o("("),xe,o(")- "),Te,o("("),Re,o(")- "),qe,o("("),Ne,o(")")])]),Ae,e("p",null,[o("The"),Ie,o("object extends the native"),e("a",Pe,[Se,t(n)]),o("object, and includes the"),e("a",Ee,[Ue,t(n)]),o("method.")]),Ce,e("p",null,[o("The"),je,o("class extends the native"),e("a",Le,[Oe,t(n)]),o("interface, with the following:")]),We,Fe,e("ul",null,[e("li",null,[Me,o("- A"),e("a",Ge,[o("ResponseCookies"),t(n)]),o("instance with the cookies from the"),He,o(". It a A"),e("a",Ve,[o("ResponseCooies"),t(n)]),o("instance with cookies from the"),ze,o(". It reads/mutates the"),Be,o("header of the response. See also"),Ke,o(".- "),De,o("- A method that takes a cookie"),Je,o("and returns an object with"),Qe,o("and"),Ye,o(". If a cookie with"),Xe,o("isn't found, it returns"),Ze,o(". If multiple cookies match, it will only return the first match.- "),$e,o("- A method that is similar to"),eo,o(", but returns a list of all the cookies with a matching"),oo,o(". If"),no,o("is unspecified, it returns all the available cookies.- "),to,o("- A method that takes an object with properties of"),so,o("as defined in the"),e("a",ao,[o("W3C CookieStore API"),t(n)]),o("spec.- "),co,o("- A method that takes either a cookie"),io,o("or a list of names. and removes the cookies matching the name(s). Returns"),ro,o("for deleted and"),lo,o("for undeleted cookies.")])]),po,e("p",null,[e("a",uo,[o("Learn more"),t(n)]),o("about HTTP Redirects.")]),ho])}const go=a(r,[["render",_o],["__file","server.html.vue"]]);export{go as default};
