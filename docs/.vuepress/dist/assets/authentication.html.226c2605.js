import{_ as o,r as p,o as r,c,b as n,d as s,e,a as t}from"./app.1ad2624e.js";const i={},l=t('<h1 id="authentication" tabindex="-1"><a class="header-anchor" href="#authentication" aria-hidden="true">#</a> Authentication</h1><p>Authentication verifies who a user is, while authorization controls what a user can access. Next.js supports multiple authentication patterns, each designed for different use cases. This page will go through each case so that you can choose based on your constraints.</p><h2 id="authentication-patterns" tabindex="-1"><a class="header-anchor" href="#authentication-patterns" aria-hidden="true">#</a> Authentication Patterns</h2><p>The first step to identifying which authentication pattern you need is understanding the<a href="/docs/guide/basic-features/data-fetching/overview">data-fetching strategy</a>you want. We can then determine which authentication providers support this strategy. There are two main patterns:</p><ul><li>Use<a href="/docs/guide/basic-features/pages#static-generation-recommended">static generation</a>to server-render a loading state, followed by fetching user data client-side.- Fetch user data<a href="/docs/guide/basic-features/pages#server-side-rendering">server-side</a>to eliminate a flash of unauthenticated content.</li></ul><h3 id="authenticating-statically-generated-pages" tabindex="-1"><a class="header-anchor" href="#authenticating-statically-generated-pages" aria-hidden="true">#</a> Authenticating Statically Generated Pages</h3><p>Next.js automatically determines that a page is static if there are no blocking data requirements. This means the absence of<a href="/docs/guide/basic-features/data-fetching/get-server-side-props"><code>getServerSideProps</code></a>and<code>getInitialProps</code>in the page. Instead, your page can render a loading state from the server, followed by fetching the user client-side.</p>',7),u=n("a",{href:"/docs/guide/api-reference/next/link"},[n("code",null,"next/link")],-1),h={href:"https://web.dev/interactive/",target:"_blank",rel:"noopener noreferrer"},k=t(`<p>Let&#39;s look at an example for a profile page. This will initially render a loading skeleton. Once the request for a user has finished, it will show the user&#39;s name:</p><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token comment">// pages/profile.js</span>

<span class="token keyword">import</span> useUser <span class="token keyword">from</span> <span class="token string">&#39;../lib/useUser&#39;</span>
<span class="token keyword">import</span> Layout <span class="token keyword">from</span> <span class="token string">&#39;../components/Layout&#39;</span>

<span class="token keyword">const</span> <span class="token function-variable function">Profile</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Fetch the user client-side</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> user <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useUser</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">redirectTo</span><span class="token operator">:</span> <span class="token string">&#39;/login&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token comment">// Server-render loading state</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>user <span class="token operator">||</span> user<span class="token punctuation">.</span>isLoggedIn <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Layout</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Loading...</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Layout</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Once the user request finishes, show the user</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Layout</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Your Profile</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Layout</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> Profile

</code></pre></div>`,2),d={href:"https://iron-session-example.vercel.app/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/vercel/next.js/tree/canary/examples/with-iron-session",target:"_blank",rel:"noopener noreferrer"},f=n("code",null,"with-iron-session",-1),m=t(`<h3 id="authenticating-server-rendered-pages" tabindex="-1"><a class="header-anchor" href="#authenticating-server-rendered-pages" aria-hidden="true">#</a> Authenticating Server-Rendered Pages</h3><p>If you export an<code>async</code>function called<a href="/docs/guide/basic-features/data-fetching/get-server-side-props"><code>getServerSideProps</code></a>from a page, Next.js will pre-render this page on each request using the data returned by<code>getServerSideProps</code>.</p><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getServerSideProps</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// Will be passed to the page component as props</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div>`,3),_=n("a",{href:"/docs/guide/basic-features/pages#server-side-rendering"},"server-side rendering",-1),y=n("code",null,"user",-1),x=n("code",null,"Profile",-1),w={href:"https://iron-session-example.vercel.app/",target:"_blank",rel:"noopener noreferrer"},b=t(`<div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token comment">// pages/profile.js</span>

<span class="token keyword">import</span> withSession <span class="token keyword">from</span> <span class="token string">&#39;../lib/session&#39;</span>
<span class="token keyword">import</span> Layout <span class="token keyword">from</span> <span class="token string">&#39;../components/Layout&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> getServerSideProps <span class="token operator">=</span> <span class="token function">withSession</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> req<span class="token punctuation">,</span> res <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> user <span class="token punctuation">}</span> <span class="token operator">=</span> req<span class="token punctuation">.</span>session

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">destination</span><span class="token operator">:</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">permanent</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span> user <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token function-variable function">Profile</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> user <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Show the user. No loading state is required</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Layout</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Your Profile</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Layout</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> Profile

</code></pre></div>`,1),v=n("code",null,"getServerSideProps",-1),j={href:"https://web.dev/time-to-first-byte/",target:"_blank",rel:"noopener noreferrer"},S=n("a",{href:"#authenticating-statically-generated-pages"},"static generation",-1),P=n("h2",{id:"authentication-providers",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#authentication-providers","aria-hidden":"true"},"#"),s(" Authentication Providers")],-1),L=n("p",null,"Now that we've discussed authentication patterns, let's look at specific providers and explore how they're used with Next.js.",-1),T=n("h3",{id:"bring-your-own-database",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#bring-your-own-database","aria-hidden":"true"},"#"),s(" Bring Your Own Database")],-1),I={class:"custom-container details"},N=n("summary",null,"示例",-1),q={href:"https://github.com/vercel/next.js/tree/canary/examples/with-iron-session",target:"_blank",rel:"noopener noreferrer"},O={href:"https://github.com/nextauthjs/next-auth-example",target:"_blank",rel:"noopener noreferrer"},A=n("p",null,"If you have an existing database with user data, you'll likely want to utilize an open-source solution that's provider agnostic.",-1),B={href:"https://github.com/vercel/next.js/tree/canary/examples/with-iron-session",target:"_blank",rel:"noopener noreferrer"},F=n("code",null,"iron-session",-1),U={href:"https://github.com/nextauthjs/next-auth-example",target:"_blank",rel:"noopener noreferrer"},C=n("code",null,"next-auth",-1),E={href:"http://www.passportjs.org/",target:"_blank",rel:"noopener noreferrer"},J={href:"https://github.com/vercel/next.js/tree/canary/examples/with-passport",target:"_blank",rel:"noopener noreferrer"},V={href:"https://github.com/vercel/next.js/tree/canary/examples/with-passport-and-next-connect",target:"_blank",rel:"noopener noreferrer"},W=n("h3",{id:"other-providers",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#other-providers","aria-hidden":"true"},"#"),s(" Other Providers")],-1),Y={href:"https://github.com/vercel/next.js/tree/canary/examples",target:"_blank",rel:"noopener noreferrer"},G={class:"custom-container details"},z=n("summary",null,"示例",-1),D={href:"https://github.com/vercel/next.js/tree/canary/examples/auth0",target:"_blank",rel:"noopener noreferrer"},R={href:"https://github.com/vercel/next.js/tree/canary/examples/with-clerk",target:"_blank",rel:"noopener noreferrer"},H={href:"https://github.com/vercel/next.js/tree/canary/examples/with-firebase-authentication",target:"_blank",rel:"noopener noreferrer"},M={href:"https://github.com/vercel/next.js/tree/canary/examples/with-magic",target:"_blank",rel:"noopener noreferrer"},K={href:"https://github.com/vercel/next.js/tree/canary/examples/with-nhost-auth-realtime-graphql",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://github.com/vercel/examples/tree/main/solutions/auth-with-ory",target:"_blank",rel:"noopener noreferrer"},X={href:"https://github.com/vercel/next.js/tree/canary/examples/with-supabase-auth-realtime-db",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://github.com/vercel/next.js/tree/canary/examples/with-supertokens",target:"_blank",rel:"noopener noreferrer"},$={href:"https://github.com/vercel/next.js/tree/canary/examples/with-userbase",target:"_blank",rel:"noopener noreferrer"},nn=n("h2",{id:"related",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#related","aria-hidden":"true"},"#"),s(" Related")],-1),sn=n("p",null,"For more information on what to do next, we recommend the following sections:",-1);function an(en,tn){const a=p("ExternalLinkIcon");return r(),c("div",null,[l,n("p",null,[s("One advantage of this pattern is it allows pages to be served from a global CDN and preloaded using"),u,s(". In practice, this results in a faster TTI ("),n("a",h,[s("Time to Interactive"),e(a)]),s(").")]),k,n("p",null,[s("You can view this"),n("a",d,[s("example in action"),e(a)]),s(". Check out the"),n("a",g,[f,e(a)]),s("example to see how it works.")]),m,n("p",null,[s("Let's transform the profile example to use"),_,s(". If there's a session, return"),y,s("as a prop to the"),x,s("component in the page. Notice there is not a loading skeleton in"),n("a",w,[s("this example"),e(a)]),s(".")]),b,n("p",null,[s("An advantage of this pattern is preventing a flash of unauthenticated content before redirecting. It's important to note fetching user data in"),v,s("will block rendering until the request to your authentication provider resolves. To prevent creating a bottleneck and increasing your TTFB ("),n("a",j,[s("Time to First Byte"),e(a)]),s("), you should ensure your authentication lookup is fast. Otherwise, consider"),S,s(".")]),P,L,T,n("details",I,[N,n("ul",null,[n("li",null,[n("a",q,[s("with-iron-session"),e(a)]),s("- "),n("a",O,[s("next-auth-example"),e(a)])])])]),A,n("ul",null,[n("li",null,[s("If you want a low-level, encrypted, and stateless session utility use"),n("a",B,[F,e(a)]),s(".- If you want a full-featured authentication system with built-in providers (Google, Facebook, GitHub…), JWT, JWE, email/password, magic links and more… use"),n("a",U,[C,e(a)]),s(".")])]),n("p",null,[s("Both of these libraries support either authentication pattern. If you're interested in"),n("a",E,[s("Passport"),e(a)]),s(", we also have examples for it using secure and encrypted cookies:")]),n("ul",null,[n("li",null,[n("a",J,[s("with-passport"),e(a)]),s("- "),n("a",V,[s("with-passport-and-next-connect"),e(a)])])]),W,n("p",null,[s("To see examples with other authentication providers, check out the"),n("a",Y,[s("examples folder"),e(a)]),s(".")]),n("details",G,[z,n("ul",null,[n("li",null,[n("a",D,[s("Auth0"),e(a)]),s("- "),n("a",R,[s("Clerk"),e(a)]),s("- "),n("a",H,[s("Firebase"),e(a)]),s("- "),n("a",M,[s("Magic"),e(a)]),s("- "),n("a",K,[s("Nhost"),e(a)]),s("- "),n("a",Q,[s("Ory"),e(a)]),s("- "),n("a",X,[s("Supabase"),e(a)]),s("- "),n("a",Z,[s("Supertokens"),e(a)]),s("- "),n("a",$,[s("Userbase"),e(a)])])])]),nn,sn])}const pn=o(i,[["render",an],["__file","authentication.html.vue"]]);export{pn as default};
