import{_ as e,o as t,c as o,a}from"./app.1ad2624e.js";const s={},n=a(`<h1 id="setting-a-custom-build-directory" tabindex="-1"><a class="header-anchor" href="#setting-a-custom-build-directory" aria-hidden="true">#</a> Setting a custom build directory</h1><p>You can specify a name to use for a custom build directory to use instead of<code>.next</code>.</p><p>Open<code>next.config.js</code>and add the<code>distDir</code>config:</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">distDir</span><span class="token operator">:</span> <span class="token string">&#39;build&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

</code></pre></div><p>Now if you run<code>next build</code>Next.js will use<code>build</code>instead of the default<code>.next</code>folder.</p><blockquote><p><code>distDir</code><strong>should not</strong>leave your project directory. For example,<code>../build</code>is an<strong>invalid</strong>directory.</p></blockquote><h2 id="related" tabindex="-1"><a class="header-anchor" href="#related" aria-hidden="true">#</a> Related</h2>`,7),c=[n];function d(r,i){return t(),o("div",null,c)}const p=e(s,[["render",d],["__file","setting-a-custom-build-directory.html.vue"]]);export{p as default};
