import{_ as o,r as l,o as i,c as r,b as e,d as a,e as n,a as s}from"./app.1ad2624e.js";const c={},d=s('<h1 id="next-font" tabindex="-1"><a class="header-anchor" href="#next-font" aria-hidden="true">#</a> @next/font</h1><details class="custom-container details"><summary>示例</summary><p>Version History</p></details><p>This API reference will help you understand how to use<a href="#nextfontgoogle"><code>@next/font/google</code></a>and<a href="#nextfontlocal"><code>@next/font/local</code></a>. For features and usage, please see the<a href="/docs/guide/basic-features/font-optimization">Optimizing Fonts</a>page.</p><h2 id="next-font-google" tabindex="-1"><a class="header-anchor" href="#next-font-google" aria-hidden="true">#</a> @next/font/google</h2><h3 id="font-function-arguments" tabindex="-1"><a class="header-anchor" href="#font-function-arguments" aria-hidden="true">#</a> Font function arguments</h3><p>For usage, review<a href="/docs/guide/basic-features/font-optimization#google-fonts">Google Fonts</a>.</p><h3 id="weight" tabindex="-1"><a class="header-anchor" href="#weight" aria-hidden="true">#</a> weight</h3>',7),p={href:"https://fonts.google.com/knowledge/glossary/weight",target:"_blank",rel:"noopener noreferrer"},h=e("code",null,"weight",-1),u={href:"https://fonts.google.com/specimen/Inter?query=inter",target:"_blank",rel:"noopener noreferrer"},f=e("code",null,"Inter",-1),_=e("code",null,"'100'",-1),g=e("code",null,"'200'",-1),b=e("code",null,"'300'",-1),k=e("code",null,"'400'",-1),m=e("code",null,"'500'",-1),y=e("code",null,"'600'",-1),v=e("code",null,"'700'",-1),x=e("code",null,"'800'",-1),w=e("code",null,"'900'",-1),S=e("code",null,"'variable'",-1),C=e("code",null,"'variable'",-1),j=e("strong",null,"not",-1),T={href:"https://fonts.google.com/variablefonts",target:"_blank",rel:"noopener noreferrer"},z=e("h3",{id:"style",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#style","aria-hidden":"true"},"#"),a(" style")],-1),O={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/font-style",target:"_blank",rel:"noopener noreferrer"},F=e("code",null,"style",-1),N={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/font-style#values",target:"_blank",rel:"noopener noreferrer"},A=e("code",null,"'normal'",-1),W=e("code",null,"'italic'",-1),I=e("code",null,"'normal'",-1),U=e("ul",null,[e("li",null,"Optional")],-1),H=e("h3",{id:"subsets",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subsets","aria-hidden":"true"},"#"),a(" subsets")],-1),L={href:"https://fonts.google.com/knowledge/glossary/subsetting",target:"_blank",rel:"noopener noreferrer"},V=e("code",null,"subsets",-1),q=e("a",{href:"/docs/guide/basic-features/font-optimization#specifying-a-subset"},"preloaded",-1),R=e("code",null,"subsets",-1),B=e("a",{href:"#preload"},[e("code",null,"preload")],-1),E=e("ul",null,[e("li",null,"Optional")],-1),G=e("h3",{id:"axes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#axes","aria-hidden":"true"},"#"),a(" axes")],-1),M=e("code",null,"axes",-1),Y=e("code",null,"axes",-1),D=e("code",null,"Inter",-1),P=e("code",null,"slnt",-1),J=e("code",null,"axes",-1),K={href:"https://fonts.google.com/variablefonts?vfquery=inter#font-families",target:"_blank",rel:"noopener noreferrer"},Q=e("code",null,"axes",-1),X={href:"https://fonts.google.com/variablefonts#font-families",target:"_blank",rel:"noopener noreferrer"},Z=e("code",null,"wght",-1),$=e("ul",null,[e("li",null,"Optional")],-1),ee=e("h3",{id:"display",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#display","aria-hidden":"true"},"#"),a(" display")],-1),ae={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display",target:"_blank",rel:"noopener noreferrer"},te=e("code",null,"display",-1),ne={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display#values",target:"_blank",rel:"noopener noreferrer"},se=e("code",null,"'auto'",-1),oe=e("code",null,"'block'",-1),le=e("code",null,"'swap'",-1),ie=e("code",null,"'fallback'",-1),re=e("code",null,"'optional'",-1),ce=e("code",null,"'optional'",-1),de=s('<ul><li>Optional</li></ul><h3 id="preload" tabindex="-1"><a class="header-anchor" href="#preload" aria-hidden="true">#</a> preload</h3><p>A boolean value that specifies whether the font should be<a href="/docs/guide/basic-features/font-optimization#preloading">preloaded</a>or not. The default is<code>true</code>.</p><ul><li>Optional</li></ul><h3 id="fallback" tabindex="-1"><a class="header-anchor" href="#fallback" aria-hidden="true">#</a> fallback</h3><p>The fallback font to use if the font cannot be loaded. An array of strings of fallback fonts such as<code>[&#39;system-ui&#39;, &#39;arial&#39;]</code>with no default.</p><ul><li>Optional</li></ul><h3 id="adjustfontfallback" tabindex="-1"><a class="header-anchor" href="#adjustfontfallback" aria-hidden="true">#</a> adjustFontFallback</h3>',8),pe={href:"https://web.dev/cls/",target:"_blank",rel:"noopener noreferrer"},he=e("code",null,"true",-1),ue=s('<ul><li>Optional</li></ul><h3 id="variable" tabindex="-1"><a class="header-anchor" href="#variable" aria-hidden="true">#</a> variable</h3><p>A string value to define the CSS variable name to be used if the style is applied with the<a href="#css-variables">CSS variable method</a>.</p><ul><li>Optional</li></ul><h2 id="next-font-local" tabindex="-1"><a class="header-anchor" href="#next-font-local" aria-hidden="true">#</a> @next/font/local</h2><h3 id="font-function-arguments-1" tabindex="-1"><a class="header-anchor" href="#font-function-arguments-1" aria-hidden="true">#</a> Font function arguments</h3><p>For usage, review<a href="/docs/guide/basic-features/font-optimization#local-fonts">Local Fonts</a>.</p><h3 id="src" tabindex="-1"><a class="header-anchor" href="#src" aria-hidden="true">#</a> src</h3><p>The path of the font file as a string relative to the directory where the font loader function is called or to the<code>pages</code>directory.</p><ul><li>Required</li></ul><p>Examples are:</p><ul><li><code>&#39;./fonts/my-font.woff2&#39;</code>where<code>my-font.woff2</code>is placed in a directory named<code>fonts</code>inside the<code>pages</code>directory- if the font loader function is called in<code>pages/index.js</code>using<code>&#39;../styles/fonts/my-font.ttf&#39;</code>, then<code>my-font.ttf</code>is placed in<code>styles/fonts</code>at the root of the project</li></ul><h3 id="weight-1" tabindex="-1"><a class="header-anchor" href="#weight-1" aria-hidden="true">#</a> weight</h3>',13),fe={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight",target:"_blank",rel:"noopener noreferrer"},_e=e("code",null,"weight",-1),ge=e("code",null,"'400'",-1),be=e("code",null,"'100 900'",-1),ke=e("ul",null,[e("li",null,"Optional")],-1),me=e("h3",{id:"style-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#style-1","aria-hidden":"true"},"#"),a(" style")],-1),ye={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/font-style",target:"_blank",rel:"noopener noreferrer"},ve=e("code",null,"style",-1),xe={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/font-style#values",target:"_blank",rel:"noopener noreferrer"},we=e("code",null,"'normal'",-1),Se=e("code",null,"'italic'",-1),Ce=e("code",null,"'oblique'",-1),je=e("code",null,"'normal'",-1),Te=e("ul",null,[e("li",null,"Optional")],-1),ze=e("h3",{id:"display-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#display-1","aria-hidden":"true"},"#"),a(" display")],-1),Oe={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display",target:"_blank",rel:"noopener noreferrer"},Fe=e("code",null,"display",-1),Ne={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display#values",target:"_blank",rel:"noopener noreferrer"},Ae=e("code",null,"'auto'",-1),We=e("code",null,"'block'",-1),Ie=e("code",null,"'swap'",-1),Ue=e("code",null,"'fallback'",-1),He=e("code",null,"'optional'",-1),Le=e("code",null,"'optional'",-1),Ve=s('<ul><li>Optional</li></ul><h3 id="preload-1" tabindex="-1"><a class="header-anchor" href="#preload-1" aria-hidden="true">#</a> preload</h3><p>A boolean value that specifies whether the font should be<a href="/docs/guide/basic-features/font-optimization#preloading">preloaded</a>or not. The default is<code>true</code>.</p><ul><li>Optional</li></ul><h3 id="fallback-1" tabindex="-1"><a class="header-anchor" href="#fallback-1" aria-hidden="true">#</a> fallback</h3><p>The fallback font to use if the font cannot be loaded. An array of strings of fallback fonts such as<code>[&#39;system-ui&#39;, &#39;arial&#39;]</code>with no default.</p><ul><li>Optional</li></ul><h3 id="adjustfontfallback-1" tabindex="-1"><a class="header-anchor" href="#adjustfontfallback-1" aria-hidden="true">#</a> adjustFontFallback</h3>',8),qe=e("code",null,"false",-1),Re={href:"https://web.dev/cls/",target:"_blank",rel:"noopener noreferrer"},Be=e("code",null,"'Arial'",-1),Ee=e("code",null,"'Times New Roman'",-1),Ge=e("code",null,"false",-1),Me=e("code",null,"'Arial'",-1),Ye=s('<ul><li>Optional</li></ul><h3 id="variable-1" tabindex="-1"><a class="header-anchor" href="#variable-1" aria-hidden="true">#</a> variable</h3><p>A string value to define the CSS variable name to be used if the style is applied with the<a href="#css-variables">CSS variable method</a>.</p><ul><li>Optional</li></ul><h3 id="declarations" tabindex="-1"><a class="header-anchor" href="#declarations" aria-hidden="true">#</a> declarations</h3>',5),De={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face#descriptors",target:"_blank",rel:"noopener noreferrer"},Pe=e("code",null,"@font-face",-1),Je=e("code",null,"{ prop: 'ascent-override', value: '90%' }",-1),Ke=s(`<ul><li>Optional</li></ul><h2 id="applying-styles" tabindex="-1"><a class="header-anchor" href="#applying-styles" aria-hidden="true">#</a> Applying Styles</h2><p>You can apply the font styles in three ways:</p><ul><li><a href="#classname"><code>className</code></a>- <a href="#style"><code>style</code></a>- <a href="#css-variables">CSS Variables</a></li></ul><h3 id="classname" tabindex="-1"><a class="header-anchor" href="#classname" aria-hidden="true">#</a> className</h3><p>Returns a read-only CSS<code>className</code>for the loaded font to be passed to an HTML element.</p><div class="language-tsx" data-ext="tsx"><pre class="language-tsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>inter<span class="token punctuation">.</span>className<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Hello, Next.js!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

</code></pre></div><h3 id="style-2" tabindex="-1"><a class="header-anchor" href="#style-2" aria-hidden="true">#</a> style</h3><p>Returns a read-only CSS<code>style</code>object for the loaded font to be passed to an HTML element, including<code>style.fontFamily</code>to access the font family name and fallback fonts.</p><div class="language-tsx" data-ext="tsx"><pre class="language-tsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>inter<span class="token punctuation">.</span>style<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Hello World</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

</code></pre></div><h3 id="css-variables" tabindex="-1"><a class="header-anchor" href="#css-variables" aria-hidden="true">#</a> CSS Variables</h3><p>If you would like to set your styles in an external style sheet and specify additional options there, use the CSS variable method.</p><p>In addition to importing the font, also import the CSS file where the CSS variable is defined and set the variable option of the font loader object as follows:</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// pages/index.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Inter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@next/font/google&#39;</span>
<span class="token keyword">import</span> styles <span class="token keyword">from</span> <span class="token string">&#39;../styles/component.module.css&#39;</span>

<span class="token keyword">const</span> inter <span class="token operator">=</span> <span class="token function">Inter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">variable</span><span class="token operator">:</span> <span class="token string">&#39;--inter-font&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre></div><p>To use the font, set the<code>className</code>of the parent container of the text you would like to style to the font loader&#39;s<code>variable</code>value and the<code>className</code>of the text to the<code>styles</code>property from the external CSS file.</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// pages/index.js</span>
<span class="token operator">&lt;</span>main className<span class="token operator">=</span><span class="token punctuation">{</span>inter<span class="token punctuation">.</span>variable<span class="token punctuation">}</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>p className<span class="token operator">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>text<span class="token punctuation">}</span><span class="token operator">&gt;</span>Hello World<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>main<span class="token operator">&gt;</span>

</code></pre></div><p>Define the<code>text</code>selector class in the<code>component.module.css</code>CSS file as follows:</p><div class="language-css" data-ext="css"><pre class="language-css"><code><span class="token comment">/* styles/component.module.css */</span>
<span class="token selector">.text</span> <span class="token punctuation">{</span>
  <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--inter-font<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">font-weight</span><span class="token punctuation">:</span> 200<span class="token punctuation">;</span>
  <span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre></div><p>In the example above, the text<code>Hello World</code>is styled using the<code>Inter</code>font and the generated font fallback with<code>font-weight: 200</code>and<code>font-style: italic</code>.</p><h2 id="next-steps" tabindex="-1"><a class="header-anchor" href="#next-steps" aria-hidden="true">#</a> Next Steps</h2>`,20);function Qe(Xe,Ze){const t=l("ExternalLinkIcon");return i(),r("div",null,[d,e("p",null,[a("The font"),e("a",p,[h,n(t)]),a("represented as a string with possible values of the weights available for the specific font. For example, for the font"),e("a",u,[f,n(t)]),a(", the possible values are"),_,a(","),g,a(","),b,a(","),k,a(","),m,a(","),y,a(","),v,a(","),x,a(","),w,a("or"),S,a("("),C,a("is the default in this case).")]),e("ul",null,[e("li",null,[a("Required if the font being used is"),j,e("a",T,[a("variable"),n(t)])])]),z,e("p",null,[a("The font"),e("a",O,[F,n(t)]),a("with possible string"),e("a",N,[a("values"),n(t)]),a("of"),A,a("or"),W,a("with default value of"),I,a(".")]),U,H,e("p",null,[a("The font"),e("a",L,[V,n(t)]),a("defined by an Array of string values with the names of each subset you would like to be"),q,a(". Fonts specified via"),R,a("will have a link preload tag injected into the head when the"),B,a("option is true, which is the default.")]),E,G,e("p",null,[a("Some variable fonts have extra"),M,a("that can be included. By default, only the font weight is included to keep the file size down. The possible values of"),Y,a("depend on the specific font. For example, the"),D,a("variable font has"),P,a("as additional"),J,a("as shown"),e("a",K,[a("here"),n(t)]),a(". You can find the possible"),Q,a("values for your font by using the filter on the"),e("a",X,[a("Google variable fonts page"),n(t)]),a("and looking for axes other than"),Z,a(".")]),$,ee,e("p",null,[a("The font"),e("a",ae,[te,n(t)]),a("with possible string"),e("a",ne,[a("values"),n(t)]),a("of"),se,a(","),oe,a(","),le,a(","),ie,a("or"),re,a("with default value of"),ce,a(".")]),de,e("p",null,[a("A boolean value that sets whether an automatic fallback font should be used to reduce"),e("a",pe,[a("Cumulative Layout Shift"),n(t)]),a(". The default is"),he,a(".")]),ue,e("p",null,[a("The font"),e("a",fe,[_e,n(t)]),a("either as a specific weight string value such as"),ge,a("or a range of values if it's a variable font such as"),be,a(".")]),ke,me,e("p",null,[a("The font"),e("a",ye,[ve,n(t)]),a("with possible string"),e("a",xe,[a("values"),n(t)]),a("of"),we,a(","),Se,a("or"),Ce,a("with default value of"),je,a(".")]),Te,ze,e("p",null,[a("The font"),e("a",Oe,[Fe,n(t)]),a("with possible string"),e("a",Ne,[a("values"),n(t)]),a("of"),Ae,a(","),We,a(","),Ie,a(","),Ue,a("or"),He,a("with default value of"),Le,a(".")]),Ve,e("p",null,[a("A string or boolean"),qe,a("value that sets whether an automatic fallback font should be used to reduce"),e("a",Re,[a("Cumulative Layout Shift"),n(t)]),a(". The possible values are"),Be,a(","),Ee,a("or"),Ge,a(". The default is"),Me,a(".")]),Ye,e("p",null,[a("An array of font face"),e("a",De,[a("descriptor"),n(t)]),a("key-value pairs that define the generated"),Pe,a("further such as"),Je,a(".")]),Ke])}const ea=o(c,[["render",Qe],["__file","font.html.vue"]]);export{ea as default};
