import{_ as t,r as o,o as c,c as p,b as n,d as e,e as s,a as i}from"./app.1ad2624e.js";const r={},u=n("h1",{id:"custom-webpack-config",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#custom-webpack-config","aria-hidden":"true"},"#"),e(" Custom Webpack Config")],-1),l=n("blockquote",null,[n("p",null,"Note: changes to webpack config are not covered by semver so proceed at your own risk")],-1),d=n("p",null,"Before continuing to add custom webpack configuration to your application make sure Next.js doesn't already support your use-case:",-1),k=n("a",{href:"/docs/guide/basic-features/built-in-css-support#adding-a-global-stylesheet"},"CSS imports",-1),f=n("a",{href:"/docs/guide/basic-features/built-in-css-support#adding-component-level-css"},"CSS modules",-1),g=n("a",{href:"/docs/guide/basic-features/built-in-css-support#sass-support"},"Sass/SCSS imports",-1),m=n("a",{href:"/docs/guide/basic-features/built-in-css-support#sass-support"},"Sass/SCSS modules",-1),h={href:"https://github.com/vercel/next.js/tree/canary/examples/using-preact",target:"_blank",rel:"noopener noreferrer"},b=n("a",{href:"/docs/guide/advanced-features/customizing-babel-config"},"Customizing babel configuration",-1),x=n("p",null,"Some commonly asked for features are available as plugins:",-1),_={href:"https://github.com/vercel/next.js/tree/canary/packages/next-mdx",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/vercel/next.js/tree/canary/packages/next-bundle-analyzer",target:"_blank",rel:"noopener noreferrer"},y=i(`<p>In order to extend our usage of<code>webpack</code>, you can define a function that extends its config inside<code>next.config.js</code>, like so:</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">webpack</span><span class="token operator">:</span> <span class="token punctuation">(</span>
    <span class="token parameter">config<span class="token punctuation">,</span>
    <span class="token punctuation">{</span> buildId<span class="token punctuation">,</span> dev<span class="token punctuation">,</span> isServer<span class="token punctuation">,</span> defaultLoaders<span class="token punctuation">,</span> nextRuntime<span class="token punctuation">,</span> webpack <span class="token punctuation">}</span></span>
  <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// Important: return the modified config</span>
    <span class="token keyword">return</span> config
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

</code></pre></div><blockquote><p>The<code>webpack</code>function is executed twice, once for the server and once for the client. This allows you to distinguish between client and server configuration using the<code>isServer</code>property.</p></blockquote><p>The second argument to the<code>webpack</code>function is an object with the following properties:</p><ul><li><code>buildId</code>:<code>String</code>- The build id, used as a unique identifier between builds- <code>dev</code>:<code>Boolean</code>- Indicates if the compilation will be done in development- <code>isServer</code>:<code>Boolean</code>- It&#39;s<code>true</code>for server-side compilation, and<code>false</code>for client-side compilation- <code>nextRuntime</code>:<code>String | undefined</code>- The target runtime for server-side compilation; either<code>&quot;edge&quot;</code>or<code>&quot;nodejs&quot;</code>, it&#39;s<code>undefined</code>for client-side compilation.- <code>defaultLoaders</code>:<code>Object</code>- Default loaders used internally by Next.js:- <code>babel</code>:<code>Object</code>- Default<code>babel-loader</code>configuration</li></ul><p>Example usage of<code>defaultLoaders.babel</code>:</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Example config for adding a loader that depends on babel-loader</span>
<span class="token comment">// This source was taken from the @next/mdx plugin source:</span>
<span class="token comment">// https://github.com/vercel/next.js/tree/canary/packages/next-mdx</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">webpack</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">config<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    config<span class="token punctuation">.</span>module<span class="token punctuation">.</span>rules<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.mdx</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        options<span class="token punctuation">.</span>defaultLoaders<span class="token punctuation">.</span>babel<span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&#39;@mdx-js/loader&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">options</span><span class="token operator">:</span> pluginOptions<span class="token punctuation">.</span>options<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">return</span> config
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

</code></pre></div><h4 id="nextruntime" tabindex="-1"><a class="header-anchor" href="#nextruntime" aria-hidden="true">#</a> nextRuntime</h4><p>Notice that<code>isServer</code>is<code>true</code>when<code>nextRuntime</code>is<code>&quot;edge&quot;</code>or<code>&quot;nodejs&quot;</code>, nextRuntime &quot;<code>edge</code>&quot; is currently for middleware and server components in edge runtime only.</p><h2 id="related" tabindex="-1"><a class="header-anchor" href="#related" aria-hidden="true">#</a> Related</h2>`,10);function w(S,j){const a=o("ExternalLinkIcon");return c(),p("div",null,[u,l,d,n("ul",null,[n("li",null,[k,e("- "),f,e("- "),g,e("- "),m,e("- "),n("a",h,[e("preact"),s(a)]),e("- "),b])]),x,n("ul",null,[n("li",null,[n("a",_,[e("@next/mdx"),s(a)]),e("- "),n("a",v,[e("@next/bundle-analyzer"),s(a)])])]),y])}const C=t(r,[["render",w],["__file","custom-webpack-config.html.vue"]]);export{C as default};
