import{_ as o,r as p,o as c,c as i,b as a,d as n,e as s,a as t}from"./app.1ad2624e.js";const r={},l=t(`<h1 id="upgrade-guide" tabindex="-1"><a class="header-anchor" href="#upgrade-guide" aria-hidden="true">#</a> Upgrade Guide</h1><h2 id="upgrading-from-12-to-13" tabindex="-1"><a class="header-anchor" href="#upgrading-from-12-to-13" aria-hidden="true">#</a> Upgrading from 12 to 13</h2><p>To update to Next.js version 13, run the following command using your preferred package manager:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i next@latest react@latest react-dom@latest eslint-config-next@latest
<span class="token comment"># or</span>
<span class="token function">yarn</span> upgrade next react react-dom eslint-config-next <span class="token parameter variable">--latest</span>
<span class="token comment"># or</span>
<span class="token function">pnpm</span> up next react react-dom eslint-config-next <span class="token parameter variable">--latest</span>

</code></pre></div><h3 id="v13-summary" tabindex="-1"><a class="header-anchor" href="#v13-summary" aria-hidden="true">#</a> v13 Summary</h3><ul><li>The<a href="/docs/guide/basic-features/supported-browsers-features">Supported Browsers</a>have been changed to drop Internet Explorer and target modern browsers.- The minimum Node.js version has been bumped from 12.22.0 to 14.0.0, since 12.x has reached end-of-life.- The minimum React version has been bumped from 17.0.2 to 18.2.0.- The<code>swcMinify</code>configuration property was changed from<code>false</code>to<code>true</code>. See<a href="/docs/guide/advanced-features/compiler">Next.js Compiler</a>for more info.- The<code>next/image</code>import was renamed to<code>next/legacy/image</code>. The<code>next/future/image</code>import was renamed to<code>next/image</code>. A<a href="/docs/guide/advanced-features/codemods#next-image-to-legacy-image">codemod is available</a>to safely and automatically rename your imports.- The<code>next/link</code>child can no longer be<code>&lt;a&gt;</code>. Add the<code>legacyBehavior</code>prop to use the legacy behavior or remove the<code>&lt;a&gt;</code>to upgrade. A<a href="/docs/guide/advanced-features/codemods#new-link">codemod is available</a>to automatically upgrade your code.- The<code>target</code>configuration property has been removed and superseded by<a href="/docs/guide/advanced-features/output-file-tracing">Output File Tracing</a>.</li></ul><h2 id="migrating-shared-features" tabindex="-1"><a class="header-anchor" href="#migrating-shared-features" aria-hidden="true">#</a> Migrating shared features</h2>`,7),d={href:"https://beta.nextjs.org/docs/routing/fundamentals",target:"_blank",rel:"noopener noreferrer"},u=a("code",null,"app",-1),h=a("strong",null,"not",-1),g={href:"https://beta.nextjs.org/docs/routing/fundamentals#the-app-directory",target:"_blank",rel:"noopener noreferrer"},k=a("code",null,"app",-1),m=t(`<p>You can continue using<code>pages</code>with new features that work in both directories, such as the updated<a href="#image-component">Image component</a>,<a href="#link-component">Link component</a>,<a href="#script-component">Script component</a>, and<a href="#font-optimization">Font optimization</a>.</p><h3 id="image-component" tabindex="-1"><a class="header-anchor" href="#image-component" aria-hidden="true">#</a> <code>&lt;Image/&gt;</code> Component</h3><p>Next.js 12 introduced many improvements to the Image Component with a temporary import:<code>next/future/image</code>. These improvements included less client-side JavaScript, easier ways to extend and style images, better accessibility, and native browser lazy loading.</p><p>Starting in Next.js 13, this new behavior is now the default for<code>next/image</code>.</p><p>There are two codemods to help you migrate to the new Image Component:</p><ul><li><a href="/docs/guide/advanced-features/codemods#rename-instances-of-nextimage">next-image-to-legacy-image</a>: This codemod will safely and automatically rename<code>next/image</code>imports to<code>next/legacy/image</code>to maintain the same behavior as Next.js 12. We recommend running this codemod to quickly update to Next.js 13 automatically.- <a href="/docs/guide/advanced-features/codemods#next-image-experimental-experimental">next-image-experimental</a>: After running the previous codemod, you can optionally run this experimental codemod to upgrade<code>next/legacy/image</code>to the new<code>next/image</code>, which will remove unused props and add inline styles. Please note this codemod is experimental and only covers static usage (such as<code>&lt;Image src={img} layout=&quot;responsive&quot; /&gt;</code>) but not dynamic usage (such as<code>&lt;Image {...props} /&gt;</code>).</li></ul><p>Alternatively, you can manually update by following the<a href="/docs/guide/advanced-features/codemods#next-image-experimental-experimental">migration guide</a>and also see the<a href="/docs/guide/api-reference/next/legacy/image#comparison">legacy comparison</a>.</p><h3 id="link-component" tabindex="-1"><a class="header-anchor" href="#link-component" aria-hidden="true">#</a> <code>&lt;Link&gt;</code> Component</h3><p>The<a href="/docs/guide/api-reference/next/link"><code>&lt;Link&gt;</code>Component</a>no longer requires manually adding an<code>&lt;a&gt;</code>tag as a child. This behavior was added as an experimental option in<a href="/blog/next-12-2">version 12.2</a>and is now the default. In Next.js 13,<code>&lt;Link&gt;</code>always renders<code>&lt;a&gt;</code>and allows you to forward props to the underlying tag.</p><p>For example:</p><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> Link <span class="token keyword">from</span> <span class="token string">&#39;next/link&#39;</span>

<span class="token comment">// Next.js 12: \`&lt;a&gt;\` has to be nested otherwise it&#39;s excluded</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Link</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/about<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">About</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Link</span></span><span class="token punctuation">&gt;</span></span>

<span class="token comment">// Next.js 13: \`&lt;Link&gt;\` always renders \`&lt;a&gt;\` under the hood</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Link</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/about<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  About
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Link</span></span><span class="token punctuation">&gt;</span></span>

</code></pre></div><p>To upgrade your links to Next.js 13, you can use the<a href="/docs/guide/advanced-features/codemods#new-link"><code>new-link</code>codemod</a>.</p><h3 id="script-component" tabindex="-1"><a class="header-anchor" href="#script-component" aria-hidden="true">#</a> <code>&lt;Script&gt;</code> Component</h3>`,13),f=a("a",{href:"/docs/guide/api-reference/next/script"},[a("code",null,"next/script")],-1),x=a("code",null,"pages",-1),y=a("code",null,"app",-1),v=a("code",null,"app",-1),b={href:"https://beta.nextjs.org/docs/upgrade-guide",target:"_blank",rel:"noopener noreferrer"},w=t(`<h3 id="font-optimization" tabindex="-1"><a class="header-anchor" href="#font-optimization" aria-hidden="true">#</a> Font Optimization</h3><p>Previously, Next.js helped you optimize fonts by inlining font CSS. Version 13 introduces the new<a href="/docs/guide/basic-features/font-optimization"><code>next/font</code></a>module which gives you the ability to customize your font loading experience while still ensuring great performance and privacy.</p><p>See<a href="/docs/guide/basic-features/font-optimization">Optimizing Fonts</a>to learn how to use<code>next/font</code>.</p><h2 id="upgrading-to-12-2" tabindex="-1"><a class="header-anchor" href="#upgrading-to-12-2" aria-hidden="true">#</a> Upgrading to 12.2</h2><p>If you were using Middleware prior to<code>12.2</code>, please see the<a href="/docs/messages/middleware-upgrade-guide">upgrade guide</a>for more information.</p><h2 id="upgrading-from-11-to-12" tabindex="-1"><a class="header-anchor" href="#upgrading-from-11-to-12" aria-hidden="true">#</a> Upgrading from 11 to 12</h2><h3 id="minimum-node-js-version" tabindex="-1"><a class="header-anchor" href="#minimum-node-js-version" aria-hidden="true">#</a> Minimum Node.js version</h3><p>The minimum Node.js version has been bumped from 12.0.0 to 12.22.0 which is the first version of Node.js with native ES Modules support.</p><h3 id="upgrade-react-version-to-latest" tabindex="-1"><a class="header-anchor" href="#upgrade-react-version-to-latest" aria-hidden="true">#</a> Upgrade React version to latest</h3><p>The minimum required React version is<code>17.0.2</code>. To upgrade you can run the following command in the terminal:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>npm install react@latest react-dom@latest

</code></pre></div><p>Or using<code>yarn</code>:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>yarn add react@latest react-dom@latest

</code></pre></div><h3 id="upgrade-next-js-version-to-12" tabindex="-1"><a class="header-anchor" href="#upgrade-next-js-version-to-12" aria-hidden="true">#</a> Upgrade Next.js version to 12</h3><p>To upgrade you can run the following command in the terminal:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>npm install next@12

</code></pre></div><p>or</p><div class="language-text" data-ext="text"><pre class="language-text"><code>yarn add next@12

</code></pre></div><h3 id="swc-replacing-babel" tabindex="-1"><a class="header-anchor" href="#swc-replacing-babel" aria-hidden="true">#</a> SWC replacing Babel</h3>`,19),j={href:"https://swc.rs/",target:"_blank",rel:"noopener noreferrer"},_=t('<p>Next.js provides full backwards compatibility with applications that have<a href="/docs/guide/advanced-features/customizing-babel-config">custom Babel configuration</a>. All transformations that Next.js handles by default like styled-jsx and tree-shaking of<code>getStaticProps</code>/<code>getStaticPaths</code>/<code>getServerSideProps</code>have been ported to Rust.</p><p>When an application has a custom Babel configuration, Next.js will automatically opt-out of using SWC for compiling JavaScript/Typescript and will fall back to using Babel in the same way that it was used in Next.js 11.</p><p>Many of the integrations with external libraries that currently require custom Babel transformations will be ported to Rust-based SWC transforms in the near future. These include but are not limited to:</p><ul><li>Styled Components- Emotion- Relay</li></ul>',4),N=a("code",null,".babelrc",-1),T={href:"https://github.com/vercel/next.js/discussions/30174",target:"_blank",rel:"noopener noreferrer"},S=t(`<h3 id="swc-replacing-terser-for-minification" tabindex="-1"><a class="header-anchor" href="#swc-replacing-terser-for-minification" aria-hidden="true">#</a> SWC replacing Terser for minification</h3><p>You can opt-in to replacing Terser with SWC for minifying JavaScript up to 7x faster using a flag in<code>next.config.js</code>:</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">swcMinify</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

</code></pre></div>`,3),C={href:"https://github.com/vercel/next.js/discussions/30237",target:"_blank",rel:"noopener noreferrer"},I=t('<h3 id="improvements-to-styled-jsx-css-parsing" tabindex="-1"><a class="header-anchor" href="#improvements-to-styled-jsx-css-parsing" aria-hidden="true">#</a> Improvements to styled-jsx CSS parsing</h3><p>On top of the Rust-based compiler, we&#39;ve implemented a new CSS parser based on the CSS parser that was used for the styled-jsx Babel transform. This new parser has improved handling of CSS and now errors when invalid CSS is used that would previously slip through and cause unexpected behavior.</p><p>Because of this change, invalid CSS will throw an error during development and<code>next build</code>. This change only affects styled-jsx usage.</p><h3 id="next-image-changed-wrapping-element" tabindex="-1"><a class="header-anchor" href="#next-image-changed-wrapping-element" aria-hidden="true">#</a> next/image changed wrapping element</h3><p><code>next/image</code>now renders the<code>&lt;img&gt;</code>inside a<code>&lt;span&gt;</code>instead of<code>&lt;div&gt;</code>.</p><p>If your application has specific CSS targeting span, for example,<code>.container span</code>, upgrading to Next.js 12 might incorrectly match the wrapping element inside the<code>&lt;Image&gt;</code>component. You can avoid this by restricting the selector to a specific class such as<code>.container span.item</code>and updating the relevant component with that className, such as<code>&lt;span className=&quot;item&quot; /&gt;</code>.</p><p>If your application has specific CSS targeting the<code>next/image``&lt;div&gt;</code>tag, for example<code>.container div</code>, it may not match anymore. You can update the selector<code>.container span</code>, or preferably, add a new<code>&lt;div className=&quot;wrapper&quot;&gt;</code>wrapping the<code>&lt;Image&gt;</code>component and target that instead such as<code>.container .wrapper</code>.</p><p>The<code>className</code>prop is unchanged and will still be passed to the underlying<code>&lt;img&gt;</code>element.</p><p>See the<a href="/docs/guide/basic-features/image-optimization#styling">documentation</a>for more info.</p><h3 id="next-js-hmr-connection-now-uses-a-websocket" tabindex="-1"><a class="header-anchor" href="#next-js-hmr-connection-now-uses-a-websocket" aria-hidden="true">#</a> Next.js&#39; HMR connection now uses a WebSocket</h3>',10),R={href:"https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events",target:"_blank",rel:"noopener noreferrer"},P=t(`<p>In some cases when proxying requests to the Next.js dev server, you will need to ensure the upgrade request is handled correctly. For example, in<code>nginx</code>you would need to add the following configuration:</p><div class="language-nginx" data-ext="nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">location</span> /_next/webpack-hmr</span> <span class="token punctuation">{</span>
    <span class="token directive"><span class="token keyword">proxy_pass</span> http://localhost:3000/_next/webpack-hmr</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">proxy_http_version</span> 1.1</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">proxy_set_header</span> Upgrade <span class="token variable">$http_upgrade</span></span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">proxy_set_header</span> Connection <span class="token string">&quot;upgrade&quot;</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre></div><p>For custom servers, such as<code>express</code>, you may need to use<code>app.all</code>to ensure the request is passed correctly, for example:</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token string">&#39;/_next/webpack-hmr&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">nextjsRequestHandler</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre></div><h3 id="webpack-4-support-has-been-removed" tabindex="-1"><a class="header-anchor" href="#webpack-4-support-has-been-removed" aria-hidden="true">#</a> Webpack 4 support has been removed</h3><p>If you are already using webpack 5 you can skip this section.</p><p>Next.js has adopted webpack 5 as the default for compilation in Next.js 11. As communicated in the<a href="/docs/messages/webpack5">webpack 5 upgrading documentation</a>Next.js 12 removes support for webpack 4.</p><p>If your application is still using webpack 4 using the opt-out flag you will now see an error linking to the<a href="/docs/messages/webpack5">webpack 5 upgrading documentation</a>.</p><h3 id="target-option-deprecated" tabindex="-1"><a class="header-anchor" href="#target-option-deprecated" aria-hidden="true">#</a> target option deprecated</h3><p>If you do not have<code>target</code>in<code>next.config.js</code>you can skip this section.</p><p>The target option has been deprecated in favor of built-in support for tracing what dependencies are needed to run a page.</p><p>During<code>next build</code>, Next.js will automatically trace each page and its dependencies to determine all of the files that are needed for deploying a production version of your application.</p><p>If you are currently using the<code>target</code>option set to<code>serverless</code>please read the<a href="/docs/guide/advanced-features/output-file-tracing">documentation on how to leverage the new output</a>.</p><h2 id="upgrading-from-version-10-to-11" tabindex="-1"><a class="header-anchor" href="#upgrading-from-version-10-to-11" aria-hidden="true">#</a> Upgrading from version 10 to 11</h2><h3 id="upgrade-react-version-to-latest-1" tabindex="-1"><a class="header-anchor" href="#upgrade-react-version-to-latest-1" aria-hidden="true">#</a> Upgrade React version to latest</h3><p>Most applications already use the latest version of React, with Next.js 11 the minimum React version has been updated to 17.0.2.</p><p>To upgrade you can run the following command:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>npm install react@latest react-dom@latest

</code></pre></div><p>Or using<code>yarn</code>:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>yarn add react@latest react-dom@latest

</code></pre></div><h3 id="upgrade-next-js-version-to-11" tabindex="-1"><a class="header-anchor" href="#upgrade-next-js-version-to-11" aria-hidden="true">#</a> Upgrade Next.js version to 11</h3><p>To upgrade you can run the following command in the terminal:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>npm install next@11

</code></pre></div><p>or</p><div class="language-text" data-ext="text"><pre class="language-text"><code>yarn add next@11

</code></pre></div><h3 id="webpack-5" tabindex="-1"><a class="header-anchor" href="#webpack-5" aria-hidden="true">#</a> Webpack 5</h3><p>Webpack 5 is now the default for all Next.js applications. If you did not have custom webpack configuration your application is already using webpack 5. If you do have custom webpack configuration you can refer to the<a href="/docs/messages/webpack5">Next.js webpack 5 documentation</a>for upgrading guidance.</p><h3 id="cleaning-the-distdir-is-now-a-default" tabindex="-1"><a class="header-anchor" href="#cleaning-the-distdir-is-now-a-default" aria-hidden="true">#</a> Cleaning the distDir is now a default</h3>`,28),q=a("code",null,".next",-1),z={href:"https://github.com/vercel/next.js/discussions/6009",target:"_blank",rel:"noopener noreferrer"},A=a("code",null,"distDir",-1),D=t(`<p>If your application was relying on this behavior previously you can disable the new default behavior by adding the<code>cleanDistDir: false</code>flag in<code>next.config.js</code>.</p><h3 id="port-is-now-supported-for-next-dev-and-next-start" tabindex="-1"><a class="header-anchor" href="#port-is-now-supported-for-next-dev-and-next-start" aria-hidden="true">#</a> PORT is now supported for next dev and next start</h3><p>Next.js 11 supports the<code>PORT</code>environment variable to set the port the application has to run on. Using<code>-p</code>/<code>--port</code>is still recommended but if you were prohibited from using<code>-p</code>in any way you can now use<code>PORT</code>as an alternative:</p><p>Example:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>PORT=4000 next start

</code></pre></div><h3 id="next-config-js-customization-to-import-images" tabindex="-1"><a class="header-anchor" href="#next-config-js-customization-to-import-images" aria-hidden="true">#</a> next.config.js customization to import images</h3><p>Next.js 11 supports static image imports with<code>next/image</code>. This new feature relies on being able to process image imports. If you previously added the<code>next-images</code>or<code>next-optimized-images</code>packages you can either move to the new built-in support using<code>next/image</code>or disable the feature:</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">images</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">disableStaticImages</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

</code></pre></div><h3 id="remove-super-componentdidcatch-from-pages-app-js" tabindex="-1"><a class="header-anchor" href="#remove-super-componentdidcatch-from-pages-app-js" aria-hidden="true">#</a> Remove super.componentDidCatch() from pages/_app.js</h3><p>The<code>next/app</code>component&#39;s<code>componentDidCatch</code>has been deprecated since Next.js 9 as it&#39;s no longer needed and has since been a no-op, in Next.js 11 it has been removed.</p><p>If your<code>pages/_app.js</code>has a custom<code>componentDidCatch</code>method you can remove<code>super.componentDidCatch</code>as it is no longer needed.</p><h3 id="remove-container-from-pages-app-js" tabindex="-1"><a class="header-anchor" href="#remove-container-from-pages-app-js" aria-hidden="true">#</a> Remove Container from pages/_app.js</h3><p>This export has been deprecated since Next.js 9 as it&#39;s no longer needed and has since been a no-op with a warning during development. In Next.js 11 it has been removed.</p><p>If your<code>pages/_app.js</code>imports<code>Container</code>from<code>next/app</code>you can remove<code>Container</code>as it has been removed. Learn more in<a href="/docs/messages/app-container-deprecated">the documentation</a>.</p><h3 id="remove-props-url-usage-from-page-components" tabindex="-1"><a class="header-anchor" href="#remove-props-url-usage-from-page-components" aria-hidden="true">#</a> Remove props.url usage from page components</h3><p>This property has been deprecated since Next.js 4 and has since shown a warning during development. With the introduction of<code>getStaticProps</code>/<code>getServerSideProps</code>these methods already disallowed usage of<code>props.url</code>. In Next.js 11 it has been removed completely.</p><p>You can learn more in<a href="/docs/messages/url-deprecated">the documentation</a>.</p><h3 id="remove-unsized-property-on-next-image" tabindex="-1"><a class="header-anchor" href="#remove-unsized-property-on-next-image" aria-hidden="true">#</a> Remove unsized property on next/image</h3><p>The<code>unsized</code>property on<code>next/image</code>was deprecated in Next.js 10.0.1. You can use<code>layout=&quot;fill&quot;</code>instead. In Next.js 11<code>unsized</code>was removed.</p><h3 id="remove-modules-property-on-next-dynamic" tabindex="-1"><a class="header-anchor" href="#remove-modules-property-on-next-dynamic" aria-hidden="true">#</a> Remove modules property on next/dynamic</h3><p>The<code>modules</code>and<code>render</code>option for<code>next/dynamic</code>have been deprecated since Next.js 9.5 showing a warning that it has been deprecated. This was done in order to make<code>next/dynamic</code>close to<code>React.lazy</code>in API surface. In Next.js 11 the<code>modules</code>and<code>render</code>options have been removed.</p><p>This option hasn&#39;t been mentioned in the documentation since Next.js 8 so it&#39;s less likely that your application is using it.</p><p>If your application does use<code>modules</code>and<code>render</code>you can refer to<a href="/docs/messages/next-dynamic-modules">the documentation</a>.</p><h3 id="remove-head-rewind" tabindex="-1"><a class="header-anchor" href="#remove-head-rewind" aria-hidden="true">#</a> Remove Head.rewind</h3><p><code>Head.rewind</code>has been a no-op since Next.js 9.5, in Next.js 11 it was removed. You can safely remove your usage of<code>Head.rewind</code>.</p><h3 id="moment-js-locales-excluded-by-default" tabindex="-1"><a class="header-anchor" href="#moment-js-locales-excluded-by-default" aria-hidden="true">#</a> Moment.js locales excluded by default</h3><p>Moment.js includes translations for a lot of locales by default. Next.js now automatically excludes these locales by default to optimize bundle size for applications using Moment.js.</p><p>To load a specific locale use this snippet:</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> moment <span class="token keyword">from</span> <span class="token string">&#39;moment&#39;</span>
<span class="token keyword">import</span> <span class="token string">&#39;moment/locale/ja&#39;</span>

moment<span class="token punctuation">.</span><span class="token function">locale</span><span class="token punctuation">(</span><span class="token string">&#39;ja&#39;</span><span class="token punctuation">)</span>

</code></pre></div><p>You can opt-out of this new default by adding<code>excludeDefaultMomentLocales: false</code>to<code>next.config.js</code>if you do not want the new behavior, do note it&#39;s highly recommended to not disable this new optimization as it significantly reduces the size of Moment.js.</p><h3 id="update-usage-of-router-events" tabindex="-1"><a class="header-anchor" href="#update-usage-of-router-events" aria-hidden="true">#</a> Update usage of router.events</h3><p>In case you&#39;re accessing<code>router.events</code>during rendering, in Next.js 11<code>router.events</code>is no longer provided during pre-rendering. Ensure you&#39;re accessing<code>router.events</code>in<code>useEffect</code>:</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handleRouteChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> <span class="token punctuation">{</span> shallow <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">App is changing to </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>
        shallow <span class="token operator">?</span> <span class="token string">&#39;with&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;without&#39;</span>
      <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> shallow routing</span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  router<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;routeChangeStart&#39;</span><span class="token punctuation">,</span> handleRouteChange<span class="token punctuation">)</span>

  <span class="token comment">// If the component is unmounted, unsubscribe</span>
  <span class="token comment">// from the event with the \`off\` method:</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    router<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">&#39;routeChangeStart&#39;</span><span class="token punctuation">,</span> handleRouteChange<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>router<span class="token punctuation">]</span><span class="token punctuation">)</span>

</code></pre></div><p>If your application uses<code>router.router.events</code>which was an internal property that was not public please make sure to use<code>router.events</code>as well.</p><h2 id="react-16-to-17" tabindex="-1"><a class="header-anchor" href="#react-16-to-17" aria-hidden="true">#</a> React 16 to 17</h2>`,35),B={href:"https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html",target:"_blank",rel:"noopener noreferrer"},H=a("code",null,"import React from 'react'",-1),M=a("code",null,"React",-1),W=a("a",{href:"/docs/guide/advanced-features/codemods#add-missing-react-import"},"codemod is available",-1),L=a("code",null,"React",-1),U=t(`<h2 id="upgrading-from-version-9-to-10" tabindex="-1"><a class="header-anchor" href="#upgrading-from-version-9-to-10" aria-hidden="true">#</a> Upgrading from version 9 to 10</h2><p>There were no breaking changes between version 9 and 10.</p><p>To upgrade run the following command:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>npm install next@10

</code></pre></div><p>Or using<code>yarn</code>:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>yarn add next@10

</code></pre></div><h2 id="upgrading-from-version-8-to-9" tabindex="-1"><a class="header-anchor" href="#upgrading-from-version-8-to-9" aria-hidden="true">#</a> Upgrading from version 8 to 9</h2><h3 id="preamble" tabindex="-1"><a class="header-anchor" href="#preamble" aria-hidden="true">#</a> Preamble</h3><h4 id="production-deployment-on-vercel" tabindex="-1"><a class="header-anchor" href="#production-deployment-on-vercel" aria-hidden="true">#</a> Production Deployment on Vercel</h4><p>If you previously configured<code>routes</code>in your<code>vercel.json</code>file for dynamic routes, these rules can be removed when leveraging Next.js 9&#39;s new<a href="/docs/guide/routing/dynamic-routes">Dynamic Routing feature</a>.</p>`,10),Y={href:"https://vercel.com?utm_source=next-site&utm_medium=docs&utm_campaign=next-website",target:"_blank",rel:"noopener noreferrer"},O=a("code",null,"vercel.json",-1),F=t(`<p>You can read more about<a href="/docs/guide/routing/dynamic-routes">Dynamic Routing here</a>.</p><h4 id="check-your-custom-pages-app-js" tabindex="-1"><a class="header-anchor" href="#check-your-custom-pages-app-js" aria-hidden="true">#</a> Check your Custom (pages/_app.js)</h4><p>If you previously copied the<a href="/docs/guide/advanced-features/custom-app">Custom<code>&lt;App&gt;</code></a>example, you may be able to remove your<code>getInitialProps</code>.</p><p>Removing<code>getInitialProps</code>from<code>pages/_app.js</code>(when possible) is important to leverage new Next.js features!</p><p>The following<code>getInitialProps</code>does nothing and may be removed:</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">App</span> <span class="token punctuation">{</span>
  <span class="token comment">// Remove me, I do nothing!</span>
  <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">getInitialProps</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> Component<span class="token punctuation">,</span> ctx <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> pageProps <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>Component<span class="token punctuation">.</span>getInitialProps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      pageProps <span class="token operator">=</span> <span class="token keyword">await</span> Component<span class="token punctuation">.</span><span class="token function">getInitialProps</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span> pageProps <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ... etc</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div><h3 id="breaking-changes" tabindex="-1"><a class="header-anchor" href="#breaking-changes" aria-hidden="true">#</a> Breaking Changes</h3><h4 id="zeit-next-typescript-is-no-longer-necessary" tabindex="-1"><a class="header-anchor" href="#zeit-next-typescript-is-no-longer-necessary" aria-hidden="true">#</a> @zeit/next-typescript is no longer necessary</h4><p>Next.js will now ignore usage<code>@zeit/next-typescript</code>and warn you to remove it. Please remove this plugin from your<code>next.config.js</code>.</p><p>Remove references to<code>@zeit/next-typescript/babel</code>from your custom<code>.babelrc</code>(if present).</p>`,10),E={href:"https://github.com/Realytics/fork-ts-checker-webpack-plugin/issues",target:"_blank",rel:"noopener noreferrer"},V=a("code",null,"fork-ts-checker-webpack-plugin",-1),J=a("code",null,"next.config.js",-1),$=t(`<p>TypeScript Definitions are published with the<code>next</code>package, so you need to uninstall<code>@types/next</code>as they would conflict.</p><p>The following types are different:</p><blockquote><p>This list was created by the community to help you upgrade, if you find other differences please send a pull request to this list to help other users.</p></blockquote><p>From:</p><div class="language-tsx" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> NextContext <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> NextAppContext<span class="token punctuation">,</span> DefaultAppIProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next/app&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> NextDocumentContext<span class="token punctuation">,</span> DefaultDocumentIProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next/document&#39;</span>

</code></pre></div><p>to</p><div class="language-tsx" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> NextPageContext <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> AppContext<span class="token punctuation">,</span> AppInitialProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next/app&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> DocumentContext<span class="token punctuation">,</span> DocumentInitialProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next/document&#39;</span>

</code></pre></div><h4 id="the-config-key-is-now-a-named-export-on-a-page" tabindex="-1"><a class="header-anchor" href="#the-config-key-is-now-a-named-export-on-a-page" aria-hidden="true">#</a> The config key is now a named export on a page</h4><p>You may no longer export a custom variable named<code>config</code>from a page (i.e.<code>export { config }</code>/<code>export const config ...</code>). This exported variable is now used to specify page-level Next.js configuration like Opt-in AMP and API Route features.</p><p>You must rename a non-Next.js-purposed<code>config</code>export to something different.</p><h4 id="next-dynamic-no-longer-renders-loading-by-default-while-loading" tabindex="-1"><a class="header-anchor" href="#next-dynamic-no-longer-renders-loading-by-default-while-loading" aria-hidden="true">#</a> next/dynamic no longer renders &quot;loading...&quot; by default while loading</h4><p>Dynamic components will not render anything by default while loading. You can still customize this behavior by setting the<code>loading</code>property:</p><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> dynamic <span class="token keyword">from</span> <span class="token string">&#39;next/dynamic&#39;</span>

<span class="token keyword">const</span> DynamicComponentWithCustomLoading <span class="token operator">=</span> <span class="token function">dynamic</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../components/hello2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token function-variable function">loading</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Loading</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>

</code></pre></div><h4 id="withamp-has-been-removed-in-favor-of-an-exported-configuration-object" tabindex="-1"><a class="header-anchor" href="#withamp-has-been-removed-in-favor-of-an-exported-configuration-object" aria-hidden="true">#</a> withAmp has been removed in favor of an exported configuration object</h4><p>Next.js now has the concept of page-level configuration, so the<code>withAmp</code>higher-order component has been removed for consistency.</p><p>This change can be<strong>automatically migrated by running the following commands at the root of your Next.js project:</strong></p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-L</span> https://github.com/vercel/next-codemod/archive/master.tar.gz <span class="token operator">|</span> <span class="token function">tar</span> <span class="token parameter variable">-xz</span> <span class="token parameter variable">--strip</span><span class="token operator">=</span><span class="token number">2</span> next-codemod-master/transforms/withamp-to-config.js npx jscodeshift <span class="token parameter variable">-t</span> ./withamp-to-config.js pages/**/*.js

</code></pre></div><p>To perform this migration by hand, or view what the codemod will produce, see below:</p><p><strong>Before</strong></p><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> withAmp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next/amp&#39;</span>

<span class="token keyword">function</span> <span class="token function">Home</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">My AMP Page</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">withAmp</span><span class="token punctuation">(</span>Home<span class="token punctuation">)</span>
<span class="token comment">// or</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">withAmp</span><span class="token punctuation">(</span>Home<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">hybrid</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre></div><p><strong>After</strong></p><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Home</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">My AMP Page</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">amp</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token comment">// or</span>
  <span class="token literal-property property">amp</span><span class="token operator">:</span> <span class="token string">&#39;hybrid&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

</code></pre></div><h4 id="next-export-no-longer-exports-pages-as-index-html" tabindex="-1"><a class="header-anchor" href="#next-export-no-longer-exports-pages-as-index-html" aria-hidden="true">#</a> next export no longer exports pages as index.html</h4><p>Previously, exporting<code>pages/about.js</code>would result in<code>out/about/index.html</code>. This behavior has been changed to result in<code>out/about.html</code>.</p><p>You can revert to the previous behavior by creating a<code>next.config.js</code>with the following content:</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// next.config.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">trailingSlash</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

</code></pre></div><h4 id="pages-api-is-treated-differently" tabindex="-1"><a class="header-anchor" href="#pages-api-is-treated-differently" aria-hidden="true">#</a> ./pages/api/ is treated differently</h4><p>Pages in<code>./pages/api/</code>are now considered<a href="/blog/next-9#api-routes">API Routes</a>. Pages in this directory will no longer contain a client-side bundle.</p><h2 id="deprecated-features" tabindex="-1"><a class="header-anchor" href="#deprecated-features" aria-hidden="true">#</a> Deprecated Features</h2><h4 id="next-dynamic-has-deprecated-loading-multiple-modules-at-once" tabindex="-1"><a class="header-anchor" href="#next-dynamic-has-deprecated-loading-multiple-modules-at-once" aria-hidden="true">#</a> next/dynamic has deprecated loading multiple modules at once</h4><p>The ability to load multiple modules at once has been deprecated in<code>next/dynamic</code>to be closer to React&#39;s implementation (<code>React.lazy</code>and<code>Suspense</code>).</p><p>Updating code that relies on this behavior is relatively straightforward! We&#39;ve provided an example of a before/after to help you migrate your application:</p><p><strong>Before</strong></p><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> dynamic <span class="token keyword">from</span> <span class="token string">&#39;next/dynamic&#39;</span>

<span class="token keyword">const</span> HelloBundle <span class="token operator">=</span> <span class="token function">dynamic</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function-variable function">modules</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> components <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">Hello1</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../components/hello1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">m</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> m<span class="token punctuation">.</span>default<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function-variable function">Hello2</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../components/hello2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">m</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> m<span class="token punctuation">.</span>default<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> components
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> <span class="token punctuation">{</span> Hello1<span class="token punctuation">,</span> Hello2 <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>title<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Hello1</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Hello2</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">DynamicBundle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">HelloBundle</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Dynamic Bundle<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> DynamicBundle

</code></pre></div><p><strong>After</strong></p><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> dynamic <span class="token keyword">from</span> <span class="token string">&#39;next/dynamic&#39;</span>

<span class="token keyword">const</span> Hello1 <span class="token operator">=</span> <span class="token function">dynamic</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../components/hello1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> Hello2 <span class="token operator">=</span> <span class="token function">dynamic</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../components/hello2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">HelloBundle</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> title <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>title<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Hello1</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Hello2</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">DynamicBundle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">HelloBundle</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Dynamic Bundle<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> DynamicBundle

</code></pre></div>`,36);function X(G,K){const e=p("ExternalLinkIcon");return c(),i("div",null,[l,a("p",null,[n("Next.js 13 introduces a new"),a("a",d,[u,n("directory"),s(e)]),n("with new features and conventions. However, upgrading to Next.js 13 does"),h,n("require using the new"),a("a",g,[k,n("directory"),s(e)]),n(".")]),m,a("p",null,[n("The behavior of"),f,n("has been updated to support both"),x,n("and"),y,n(". If incrementally adopting"),v,n(", read the"),a("a",b,[n("upgrade guide"),s(e)]),n(".")]),w,a("p",null,[n("Next.js now uses a Rust-based compiler,"),a("a",j,[n("SWC"),s(e)]),n(", to compile JavaScript/TypeScript. This new compiler is up to 17x faster than Babel when compiling individual files and allows for up to 5x faster Fast Refresh.")]),_,a("p",null,[n("In order to prioritize transforms that will help you adopt SWC, please provide your"),N,n("on"),a("a",T,[n("the feedback thread"),s(e)]),n(".")]),S,a("p",null,[n("Minification using SWC is an opt-in flag to ensure it can be tested against more real-world Next.js applications before it becomes the default in Next.js 12.1. If you have feedback about minification, please leave it on"),a("a",C,[n("the feedback thread"),s(e)]),n(".")]),I,a("p",null,[n("Previously, Next.js used a"),a("a",R,[n("server-sent events"),s(e)]),n("connection to receive HMR events. Next.js 12 now uses a WebSocket connection.")]),P,a("p",null,[n("The build output directory (defaults to"),q,n(") is now cleared by default except for the Next.js caches. You can refer to"),a("a",z,[n("the cleaning"),A,n("RFC"),s(e)]),n("for more information.")]),D,a("p",null,[n("React 17 introduced a new"),a("a",B,[n("JSX Transform"),s(e)]),n("that brings a long-time Next.js feature to the wider React ecosystem: Not having to"),H,n("when using JSX. When using React 17 Next.js will automatically use the new transform. This transform does not make the"),M,n("variable global, which was an unintended side-effect of the previous Next.js implementation. A"),W,n("to automatically fix cases where you accidentally used"),L,n("without importing it.")]),U,a("p",null,[n("Next.js 9's dynamic routes are**automatically configured on"),a("a",Y,[n("Vercel"),s(e)]),n("**and do not require any"),O,n("customization.")]),F,a("p",null,[n("Usage of"),a("a",E,[V,s(e)]),n("should also be removed from your"),J,n(".")]),$])}const Z=o(r,[["render",X],["__file","upgrading.html.vue"]]);export{Z as default};
