import{_ as s,o as e,c as n,a}from"./app.1ad2624e.js";const t={},o=a(`<h1 id="custom-page-extensions" tabindex="-1"><a class="header-anchor" href="#custom-page-extensions" aria-hidden="true">#</a> Custom Page Extensions</h1><p>You can extend the default Page extensions (<code>.tsx</code>,<code>.ts</code>,<code>.jsx</code>,<code>.js</code>) used by Next.js. Inside<code>next.config.js</code>, add the<code>pageExtensions</code>config:</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">pageExtensions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;mdx&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;md&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;jsx&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;tsx&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ts&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

</code></pre></div><p>Changing these values affectsallNext.js pages, including the following:</p><ul><li><code>middleware.js</code>- <code>pages/_document.js</code>- <code>pages/_app.js</code>- <code>pages/api/</code></li></ul><p>For example, if you reconfigure<code>.ts</code>page extensions to<code>.page.ts</code>, you would need to rename pages like<code>_app.page.ts</code>.</p><h2 id="including-non-page-files-in-the-pages-directory" tabindex="-1"><a class="header-anchor" href="#including-non-page-files-in-the-pages-directory" aria-hidden="true">#</a> Including non-page files in the pages directory</h2><p>You can colocate test files or other files used by components in the<code>pages</code>directory. Inside<code>next.config.js</code>, add the<code>pageExtensions</code>config:</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">pageExtensions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;page.tsx&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;page.ts&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;page.jsx&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;page.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

</code></pre></div><p>Then, rename your pages to have a file extension that includes<code>.page</code>(e.g. rename<code>MyPage.tsx</code>to<code>MyPage.page.tsx</code>). Ensure you renameallNext.js pages, including the files mentioned above.</p><h2 id="related" tabindex="-1"><a class="header-anchor" href="#related" aria-hidden="true">#</a> Related</h2>`,11),p=[o];function c(i,d){return e(),n("div",null,p)}const r=s(t,[["render",c],["__file","custom-page-extensions.html.vue"]]);export{r as default};
