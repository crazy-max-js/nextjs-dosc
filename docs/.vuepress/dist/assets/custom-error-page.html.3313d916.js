import{_ as a,o as s,c as n,a as t}from"./app.1ad2624e.js";const e={},o=t(`<h1 id="custom-error-page" tabindex="-1"><a class="header-anchor" href="#custom-error-page" aria-hidden="true">#</a> Custom Error Page</h1><h2 id="_404-page" tabindex="-1"><a class="header-anchor" href="#_404-page" aria-hidden="true">#</a> 404 Page</h2><p>A 404 page may be accessed very often. Server-rendering an error page for every visit increases the load of the Next.js server. This can result in increased costs and slow experiences.</p><p>To avoid the above pitfalls, Next.js provides a static 404 page by default without having to add any additional files.</p><h3 id="customizing-the-404-page" tabindex="-1"><a class="header-anchor" href="#customizing-the-404-page" aria-hidden="true">#</a> Customizing The 404 Page</h3><p>To create a custom 404 page you can create a<code>pages/404.js</code>file. This file is statically generated at build time.</p><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token comment">// pages/404.js</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Custom404</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">404 - Page Not Found</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">}</span>

</code></pre></div><blockquote><p><strong>Note</strong>: You can use<a href="/docs/guide/basic-features/data-fetching/get-static-props"><code>getStaticProps</code></a>inside this page if you need to fetch data at build time.</p></blockquote><h2 id="_500-page" tabindex="-1"><a class="header-anchor" href="#_500-page" aria-hidden="true">#</a> 500 Page</h2><p>Server-rendering an error page for every visit adds complexity to responding to errors. To help users get responses to errors as fast as possible, Next.js provides a static 500 page by default without having to add any additional files.</p><h3 id="customizing-the-500-page" tabindex="-1"><a class="header-anchor" href="#customizing-the-500-page" aria-hidden="true">#</a> Customizing The 500 Page</h3><p>To customize the 500 page you can create a<code>pages/500.js</code>file. This file is statically generated at build time.</p><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token comment">// pages/500.js</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Custom500</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">500 - Server-side error occurred</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">}</span>

</code></pre></div><blockquote><p><strong>Note</strong>: You can use<a href="/docs/guide/basic-features/data-fetching/get-static-props"><code>getStaticProps</code></a>inside this page if you need to fetch data at build time.</p></blockquote><h3 id="more-advanced-error-page-customizing" tabindex="-1"><a class="header-anchor" href="#more-advanced-error-page-customizing" aria-hidden="true">#</a> More Advanced Error Page Customizing</h3><p>500 errors are handled both client-side and server-side by the<code>Error</code>component. If you wish to override it, define the file<code>pages/_error.js</code>and add the following code:</p><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> statusCode <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token punctuation">{</span>statusCode
        <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">An error </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>statusCode<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> occurred on server</span><span class="token template-punctuation string">\`</span></span>
        <span class="token operator">:</span> <span class="token string">&#39;An error occurred on client&#39;</span><span class="token punctuation">}</span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

Error<span class="token punctuation">.</span><span class="token function-variable function">getInitialProps</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> res<span class="token punctuation">,</span> err <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> statusCode <span class="token operator">=</span> res <span class="token operator">?</span> res<span class="token punctuation">.</span>statusCode <span class="token operator">:</span> err <span class="token operator">?</span> err<span class="token punctuation">.</span>statusCode <span class="token operator">:</span> <span class="token number">404</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> statusCode <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> Error

</code></pre></div><blockquote><p><code>pages/_error.js</code>is only used in production. In development youâ€™ll get an error with the call stack to know where the error originated from.</p></blockquote><h3 id="reusing-the-built-in-error-page" tabindex="-1"><a class="header-anchor" href="#reusing-the-built-in-error-page" aria-hidden="true">#</a> Reusing the built-in error page</h3><p>If you want to render the built-in error page you can by importing the<code>Error</code>component:</p><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> Error <span class="token keyword">from</span> <span class="token string">&#39;next/error&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getServerSideProps</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;https://api.github.com/repos/vercel/next.js&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> errorCode <span class="token operator">=</span> res<span class="token punctuation">.</span>ok <span class="token operator">?</span> <span class="token boolean">false</span> <span class="token operator">:</span> res<span class="token punctuation">.</span>status
  <span class="token keyword">const</span> json <span class="token operator">=</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span> errorCode<span class="token punctuation">,</span> <span class="token literal-property property">stars</span><span class="token operator">:</span> json<span class="token punctuation">.</span>stargazers_count <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Page</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> errorCode<span class="token punctuation">,</span> stars <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>errorCode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Error</span></span> <span class="token attr-name">statusCode</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>errorCode<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Next stars: </span><span class="token punctuation">{</span>stars<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">}</span>

</code></pre></div><p>The<code>Error</code>component also takes<code>title</code>as a property if you want to pass in a text message along with a<code>statusCode</code>.</p><p>If you have a custom<code>Error</code>component be sure to import that one instead.<code>next/error</code>exports the default component used by Next.js.</p><h3 id="caveats" tabindex="-1"><a class="header-anchor" href="#caveats" aria-hidden="true">#</a> Caveats</h3><ul><li><code>Error</code>does not currently support Next.js<a href="/docs/guide/basic-featuresatures/data-fetching">Data Fetching methods</a>like<a href="/docs/guide/basic-features/data-fetching/get-static-props"><code>getStaticProps</code></a>or<a href="/docs/guide/basic-features/data-fetching/get-server-side-props"><code>getServerSideProps</code></a>.- <code>_error</code>, like<code>_app</code>, is a reserved pathname.<code>_error</code>is used to define the customized layouts and behaviors of the error pages.<code>/_error</code>will render 404 when accessed directly via<a href="/docs/guide/routing/introduction">routing</a>or rendering in a<a href="/docs/guide/advanced-features/custom-server">custom server</a>.</li></ul>`,25),p=[o];function c(r,i){return s(),n("div",null,p)}const l=a(e,[["render",c],["__file","custom-error-page.html.vue"]]);export{l as default};
