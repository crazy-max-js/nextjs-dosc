import{_ as p,r as o,o as c,c as l,b as n,d as a,e as t,a as e}from"./app.1ad2624e.js";const r={},u=e(`<h1 id="next-js-codemods" tabindex="-1"><a class="header-anchor" href="#next-js-codemods" aria-hidden="true">#</a> Next.js Codemods</h1><p>Next.js provides Codemod transformations to help upgrade your Next.js codebase when a feature is deprecated.</p><p>Codemods are transformations that run on your codebase programmatically. This allows for a large amount of changes to be applied without having to manually go through every file.</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><p><code>npx @next/codemod@latest &lt;transform&gt; &lt;path&gt;</code></p><ul><li><code>transform</code>- name of transform, see available transforms below.- <code>path</code>- files or directory to transform- <code>--dry</code>Do a dry-run, no code will be edited- <code>--print</code>Prints the changed output for comparison</li></ul><h2 id="next-js-13" tabindex="-1"><a class="header-anchor" href="#next-js-13" aria-hidden="true">#</a> Next.js 13</h2><h3 id="new-link" tabindex="-1"><a class="header-anchor" href="#new-link" aria-hidden="true">#</a> new-link</h3><p>Safely removes<code>&lt;a&gt;</code>from<code>next/link</code>or adds<code>legacyBehavior</code>prop.</p><p>For example:</p><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Link</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/about<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">About Us</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Link</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre></div><p>Transforms into:</p><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Link</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/about<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">About Us</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Link</span></span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">}</span>

</code></pre></div><h3 id="next-image-to-legacy-image" tabindex="-1"><a class="header-anchor" href="#next-image-to-legacy-image" aria-hidden="true">#</a> next-image-to-legacy-image</h3><p>This codemod safely migrates existing Next.js 10, 11, 12 applications importing<code>next/image</code>to the renamed<code>next/legacy/image</code>import in Next.js 13.</p><p>For example:</p><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> Image1 <span class="token keyword">from</span> <span class="token string">&#39;next/image&#39;</span>
<span class="token keyword">import</span> Image2 <span class="token keyword">from</span> <span class="token string">&#39;next/future/image&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Home</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Image1</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/test.jpg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>200<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>300<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Image2</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/test.png<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>500<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>400<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre></div><p>Transforms into:</p><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> Image1 <span class="token keyword">from</span> <span class="token string">&#39;next/legacy/image&#39;</span>
<span class="token keyword">import</span> Image2 <span class="token keyword">from</span> <span class="token string">&#39;next/image&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Home</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Image1</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/test.jpg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>200<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>300<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Image2</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/test.png<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>500<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>400<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre></div><h3 id="next-image-experimental-experimental" tabindex="-1"><a class="header-anchor" href="#next-image-experimental-experimental" aria-hidden="true">#</a> next-image-experimental (experimental)</h3><p>This codemod dangerously migrates from<code>next/legacy/image</code>to the new<code>next/image</code>by adding inline styles and removing unused props. Please note this codemod is experimental and only covers static usage (such as<code>&lt;Image src={img} layout=&quot;responsive&quot; /&gt;</code>) but not dynamic usage (such as<code>&lt;Image {...props} /&gt;</code>).</p><ul><li>Removes<code>layout</code>prop and adds<code>style</code>- Removes<code>objectFit</code>prop and adds<code>style</code>- Removes<code>objectPosition</code>prop and adds<code>style</code>- Removes<code>lazyBoundary</code>prop- Removes<code>lazyRoot</code>prop- Changes next.config.js<code>loader</code>to &quot;custom&quot;, removes<code>path</code>, and sets<code>loaderFile</code>to a new file.</li></ul><h4 id="before-intrinsic" tabindex="-1"><a class="header-anchor" href="#before-intrinsic" aria-hidden="true">#</a> Before: intrinsic</h4><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> Image <span class="token keyword">from</span> <span class="token string">&#39;next/image&#39;</span>
<span class="token keyword">import</span> img <span class="token keyword">from</span> <span class="token string">&#39;../img.png&#39;</span>

<span class="token keyword">function</span> <span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Image</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>img<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token punctuation">}</span>

</code></pre></div><h4 id="after-intrinsic" tabindex="-1"><a class="header-anchor" href="#after-intrinsic" aria-hidden="true">#</a> After: intrinsic</h4><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> Image <span class="token keyword">from</span> <span class="token string">&#39;next/image&#39;</span>
<span class="token keyword">import</span> img <span class="token keyword">from</span> <span class="token string">&#39;../img.png&#39;</span>

<span class="token keyword">const</span> css <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">maxWidth</span><span class="token operator">:</span> <span class="token string">&#39;100%&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token string">&#39;auto&#39;</span> <span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Image</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>img<span class="token punctuation">}</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>css<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token punctuation">}</span>

</code></pre></div><h4 id="before-responsive" tabindex="-1"><a class="header-anchor" href="#before-responsive" aria-hidden="true">#</a> Before: responsive</h4><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> Image <span class="token keyword">from</span> <span class="token string">&#39;next/image&#39;</span>
<span class="token keyword">import</span> img <span class="token keyword">from</span> <span class="token string">&#39;../img.png&#39;</span>

<span class="token keyword">function</span> <span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Image</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>img<span class="token punctuation">}</span></span> <span class="token attr-name">layout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>responsive<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token punctuation">}</span>

</code></pre></div><h4 id="after-responsive" tabindex="-1"><a class="header-anchor" href="#after-responsive" aria-hidden="true">#</a> After: responsive</h4><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> Image <span class="token keyword">from</span> <span class="token string">&#39;next/image&#39;</span>
<span class="token keyword">import</span> img <span class="token keyword">from</span> <span class="token string">&#39;../img.png&#39;</span>

<span class="token keyword">const</span> css <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">&#39;100%&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token string">&#39;auto&#39;</span> <span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Image</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>img<span class="token punctuation">}</span></span> <span class="token attr-name">sizes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100vw<span class="token punctuation">&quot;</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>css<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token punctuation">}</span>

</code></pre></div><h4 id="before-fill" tabindex="-1"><a class="header-anchor" href="#before-fill" aria-hidden="true">#</a> Before: fill</h4><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> Image <span class="token keyword">from</span> <span class="token string">&#39;next/image&#39;</span>
<span class="token keyword">import</span> img <span class="token keyword">from</span> <span class="token string">&#39;../img.png&#39;</span>

<span class="token keyword">function</span> <span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Image</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>img<span class="token punctuation">}</span></span> <span class="token attr-name">layout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fill<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token punctuation">}</span>

</code></pre></div><h4 id="after-fill" tabindex="-1"><a class="header-anchor" href="#after-fill" aria-hidden="true">#</a> After: fill</h4><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> Image <span class="token keyword">from</span> <span class="token string">&#39;next/image&#39;</span>
<span class="token keyword">import</span> img <span class="token keyword">from</span> <span class="token string">&#39;../img.png&#39;</span>

<span class="token keyword">function</span> <span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Image</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>img<span class="token punctuation">}</span></span> <span class="token attr-name">sizes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100vw<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span> <span class="token punctuation">/&gt;</span></span>
<span class="token punctuation">}</span>

</code></pre></div><h4 id="before-fixed" tabindex="-1"><a class="header-anchor" href="#before-fixed" aria-hidden="true">#</a> Before: fixed</h4><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> Image <span class="token keyword">from</span> <span class="token string">&#39;next/image&#39;</span>
<span class="token keyword">import</span> img <span class="token keyword">from</span> <span class="token string">&#39;../img.png&#39;</span>

<span class="token keyword">function</span> <span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Image</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>img<span class="token punctuation">}</span></span> <span class="token attr-name">layout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fixed<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token punctuation">}</span>

</code></pre></div><h4 id="after-fixed" tabindex="-1"><a class="header-anchor" href="#after-fixed" aria-hidden="true">#</a> After: fixed</h4><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> Image <span class="token keyword">from</span> <span class="token string">&#39;next/image&#39;</span>
<span class="token keyword">import</span> img <span class="token keyword">from</span> <span class="token string">&#39;../img.png&#39;</span>

<span class="token keyword">function</span> <span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Image</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>img<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token punctuation">}</span>

</code></pre></div><h2 id="next-js-11" tabindex="-1"><a class="header-anchor" href="#next-js-11" aria-hidden="true">#</a> Next.js 11</h2><h3 id="cra-to-next-experimental" tabindex="-1"><a class="header-anchor" href="#cra-to-next-experimental" aria-hidden="true">#</a> cra-to-next (experimental)</h3><p>Migrates a Create React App project to Next.js; creating a pages directory and necessary config to match behavior. Client-side only rendering is leveraged initially to prevent breaking compatibility due to<code>window</code>usage during SSR and can be enabled seamlessly to allow gradual adoption of Next.js specific features.</p>`,41),i={href:"https://github.com/vercel/next.js/discussions/25858",target:"_blank",rel:"noopener noreferrer"},k=n("h2",{id:"next-js-10",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#next-js-10","aria-hidden":"true"},"#"),a(" Next.js 10")],-1),d=n("h3",{id:"add-missing-react-import",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#add-missing-react-import","aria-hidden":"true"},"#"),a(" add-missing-react-import")],-1),g=n("code",null,"React",-1),m={href:"https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html",target:"_blank",rel:"noopener noreferrer"},h=e(`<p>For example:</p><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token comment">// my-component.js</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">Home</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Hello World</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div><p>Transforms into:</p><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token comment">// my-component.js</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">Home</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Hello World</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div><h2 id="next-js-9" tabindex="-1"><a class="header-anchor" href="#next-js-9" aria-hidden="true">#</a> Next.js 9</h2><h3 id="name-default-component" tabindex="-1"><a class="header-anchor" href="#name-default-component" aria-hidden="true">#</a> name-default-component</h3><p>Transforms anonymous components into named components to make sure they work with<a href="/blog/next-9-4#fast-refresh">Fast Refresh</a>.</p><p>For example:</p><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token comment">// my-component.js</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Hello World</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">}</span>

</code></pre></div><p>Transforms into:</p><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token comment">// my-component.js</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">MyComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Hello World</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">}</span>

</code></pre></div><p>The component will have a camel cased name based on the name of the file, and it also works with arrow functions.</p><h4 id="usage-1" tabindex="-1"><a class="header-anchor" href="#usage-1" aria-hidden="true">#</a> Usage</h4><p>Go to your project</p><div class="language-text" data-ext="text"><pre class="language-text"><code>cd path-to-your-project/

</code></pre></div><p>Run the codemod:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>npx @next/codemod@latest name-default-component

</code></pre></div><h3 id="withamp-to-config" tabindex="-1"><a class="header-anchor" href="#withamp-to-config" aria-hidden="true">#</a> withamp-to-config</h3><p>Transforms the<code>withAmp</code>HOC into Next.js 9 page configuration.</p><p>For example:</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Before</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> withAmp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next/amp&#39;</span>

<span class="token keyword">function</span> <span class="token function">Home</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>My <span class="token constant">AMP</span> Page<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">withAmp</span><span class="token punctuation">(</span>Home<span class="token punctuation">)</span>

</code></pre></div><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// After</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Home</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>My <span class="token constant">AMP</span> Page<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">amp</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

</code></pre></div><h4 id="usage-2" tabindex="-1"><a class="header-anchor" href="#usage-2" aria-hidden="true">#</a> Usage</h4><p>Go to your project</p><div class="language-text" data-ext="text"><pre class="language-text"><code>cd path-to-your-project/

</code></pre></div><p>Run the codemod:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>npx @next/codemod@latest withamp-to-config

</code></pre></div><h2 id="next-js-6" tabindex="-1"><a class="header-anchor" href="#next-js-6" aria-hidden="true">#</a> Next.js 6</h2><h3 id="url-to-withrouter" tabindex="-1"><a class="header-anchor" href="#url-to-withrouter" aria-hidden="true">#</a> url-to-withrouter</h3><p>Transforms the deprecated automatically injected<code>url</code>property on top level pages to using<code>withRouter</code>and the<code>router</code>property it injects. Read more here:<a href="/docs/messages/url-deprecated">https://nextjs.org/docs/messages/url-deprecated</a></p><p>For example:</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// From</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">extends</span> React<span class="token punctuation">.</span>Component <span class="token punctuation">{</span>
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> pathname <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>url
    <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>Current pathname<span class="token operator">:</span> <span class="token punctuation">{</span>pathname<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// To</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> withRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next/router&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">withRouter</span><span class="token punctuation">(</span>
  <span class="token keyword">class</span> <span class="token class-name">extends</span> React<span class="token punctuation">.</span>Component <span class="token punctuation">{</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> pathname <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>router
      <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>Current pathname<span class="token operator">:</span> <span class="token punctuation">{</span>pathname<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>

</code></pre></div>`,33),x={href:"https://github.com/vercel/next.js/tree/canary/packages/next-codemod/transforms/__testfixtures__/url-to-withrouter",target:"_blank",rel:"noopener noreferrer"},f=n("code",null,"__testfixtures__",-1),y=e(`<h4 id="usage-3" tabindex="-1"><a class="header-anchor" href="#usage-3" aria-hidden="true">#</a> Usage</h4><p>Go to your project</p><div class="language-text" data-ext="text"><pre class="language-text"><code>cd path-to-your-project/

</code></pre></div><p>Run the codemod:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>npx @next/codemod@latest url-to-withrouter

</code></pre></div>`,5);function w(v,j){const s=o("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[a("Please share any feedback related to this transform"),n("a",i,[a("in this discussion"),t(s)]),a(".")]),k,d,n("p",null,[a("Transforms files that do not import"),g,a("to include the import in order for the new"),n("a",m,[a("React JSX transform"),t(s)]),a("to work.")]),h,n("p",null,[a("This is one case. All the cases that are transformed (and tested) can be found in the"),n("a",x,[f,a("directory"),t(s)]),a(".")]),y])}const q=p(r,[["render",w],["__file","codemods.html.vue"]]);export{q as default};
