import{_ as c,r as o,o as p,c as i,b as a,d as n,e as s,a as t}from"./app.1ad2624e.js";const l={},u=t(`<h1 id="continuous-integration-ci-build-caching" tabindex="-1"><a class="header-anchor" href="#continuous-integration-ci-build-caching" aria-hidden="true">#</a> Continuous Integration (CI) Build Caching</h1><p>To improve build performance, Next.js saves a cache to<code>.next/cache</code>that is shared between builds.</p><p>To take advantage of this cache in Continuous Integration (CI) environments, your CI workflow will need to be configured to correctly persist the cache between builds.</p><blockquote><p>If your CI is not configured to persist<code>.next/cache</code>between builds, you may see a<a href="/docs/messages/no-cache">No Cache Detected</a>error.</p></blockquote><p>Here are some example cache configurations for common CI providers:</p><h2 id="vercel" tabindex="-1"><a class="header-anchor" href="#vercel" aria-hidden="true">#</a> Vercel</h2><p>Next.js caching is automatically configured for you. There&#39;s no action required on your part.</p><h2 id="circleci" tabindex="-1"><a class="header-anchor" href="#circleci" aria-hidden="true">#</a> CircleCI</h2><p>Edit your<code>save_cache</code>step in<code>.circleci/config.yml</code>to include<code>.next/cache</code>:</p><div class="language-yaml" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">steps</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">save_cache</span><span class="token punctuation">:</span>
      <span class="token key atrule">key</span><span class="token punctuation">:</span> dependency<span class="token punctuation">-</span>cache<span class="token punctuation">-</span><span class="token punctuation">{</span><span class="token punctuation">{</span> checksum &quot;yarn.lock&quot; <span class="token punctuation">}</span><span class="token punctuation">}</span>
      <span class="token key atrule">paths</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> ./node_modules
        <span class="token punctuation">-</span> ./.next/cache

</code></pre></div>`,10),r=a("code",null,"save_cache",-1),d={href:"https://circleci.com/docs/2.0/caching/",target:"_blank",rel:"noopener noreferrer"},h=t(`<h2 id="travis-ci" tabindex="-1"><a class="header-anchor" href="#travis-ci" aria-hidden="true">#</a> Travis CI</h2><p>Add or merge the following into your<code>.travis.yml</code>:</p><div class="language-yaml" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">cache</span><span class="token punctuation">:</span>
  <span class="token key atrule">directories</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> $HOME/.cache/yarn
    <span class="token punctuation">-</span> node_modules
    <span class="token punctuation">-</span> .next/cache

</code></pre></div><h2 id="gitlab-ci" tabindex="-1"><a class="header-anchor" href="#gitlab-ci" aria-hidden="true">#</a> GitLab CI</h2><p>Add or merge the following into your<code>.gitlab-ci.yml</code>:</p><div class="language-yaml" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">cache</span><span class="token punctuation">:</span>
  <span class="token key atrule">key</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>CI_COMMIT_REF_SLUG<span class="token punctuation">}</span>
  <span class="token key atrule">paths</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> node_modules/
    <span class="token punctuation">-</span> .next/cache/

</code></pre></div><h2 id="netlify-ci" tabindex="-1"><a class="header-anchor" href="#netlify-ci" aria-hidden="true">#</a> Netlify CI</h2>`,7),k={href:"https://www.netlify.com/products/build/plugins/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.npmjs.com/package/@netlify/plugin-nextjs",target:"_blank",rel:"noopener noreferrer"},y=a("code",null,"@netlify/plugin-nextjs",-1),m=t('<h2 id="aws-codebuild" tabindex="-1"><a class="header-anchor" href="#aws-codebuild" aria-hidden="true">#</a> AWS CodeBuild</h2><p>Add (or merge in) the following to your<code>buildspec.yml</code>:</p><div class="language-yaml" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">cache</span><span class="token punctuation">:</span>\n  <span class="token key atrule">paths</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> <span class="token string">&#39;node_modules/**/*&#39;</span> <span class="token comment"># Cache `node_modules` for faster `yarn` or `npm i`</span>\n    <span class="token punctuation">-</span> <span class="token string">&#39;.next/cache/**/*&#39;</span> <span class="token comment"># Cache Next.js for faster application rebuilds</span>\n\n</code></pre></div><h2 id="github-actions" tabindex="-1"><a class="header-anchor" href="#github-actions" aria-hidden="true">#</a> GitHub Actions</h2>',4),f={href:"https://github.com/actions/cache",target:"_blank",rel:"noopener noreferrer"},_=t(`<div class="language-yaml" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/cache@v3
<span class="token key atrule">with</span><span class="token punctuation">:</span>
  <span class="token comment"># See here for caching with \`yarn\` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node</span>
  <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
    ~/.npm
    \${{ github.workspace }}/.next/cache</span>
  <span class="token comment"># Generate a new cache whenever packages or source files change.</span>
  <span class="token key atrule">key</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> runner.os <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">-</span>nextjs<span class="token punctuation">-</span>$<span class="token punctuation">{</span><span class="token punctuation">{</span> hashFiles(&#39;<span class="token important">**/package-lock.json&#39;)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">-</span>$<span class="token punctuation">{</span><span class="token punctuation">{</span> hashFiles(&#39;<span class="token important">**.</span><span class="token punctuation">[</span>jt<span class="token punctuation">]</span>s&#39;<span class="token punctuation">,</span> &#39;<span class="token important">**.</span><span class="token punctuation">[</span>jt<span class="token punctuation">]</span>sx&#39;) <span class="token punctuation">}</span><span class="token punctuation">}</span>
  <span class="token comment"># If source files changed but packages didn&#39;t, rebuild from a prior cache.</span>
  <span class="token key atrule">restore-keys</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
    \${{ runner.os }}-nextjs-\${{ hashFiles(&#39;**/package-lock.json&#39;) }}-</span>

</code></pre></div><h2 id="bitbucket-pipelines" tabindex="-1"><a class="header-anchor" href="#bitbucket-pipelines" aria-hidden="true">#</a> Bitbucket Pipelines</h2><p>Add or merge the following into your<code>bitbucket-pipelines.yml</code>at the top level (same level as<code>pipelines</code>):</p><div class="language-yaml" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">definitions</span><span class="token punctuation">:</span>
  <span class="token key atrule">caches</span><span class="token punctuation">:</span>
    <span class="token key atrule">nextcache</span><span class="token punctuation">:</span> .next/cache

</code></pre></div><p>Then reference it in the<code>caches</code>section of your pipeline&#39;s<code>step</code>:</p><div class="language-yaml" data-ext="yml"><pre class="language-yaml"><code><span class="token punctuation">-</span> <span class="token key atrule">step</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> your_step_name
    <span class="token key atrule">caches</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> node
      <span class="token punctuation">-</span> nextcache

</code></pre></div><h2 id="heroku" tabindex="-1"><a class="header-anchor" href="#heroku" aria-hidden="true">#</a> Heroku</h2>`,7),b={href:"https://devcenter.heroku.com/articles/nodejs-support#custom-caching",target:"_blank",rel:"noopener noreferrer"},x=a("code",null,"cacheDirectories",-1),v=t(`<div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token string-property property">&quot;cacheDirectories&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;.next/cache&quot;</span><span class="token punctuation">]</span>

</code></pre></div><h2 id="azure-pipelines" tabindex="-1"><a class="header-anchor" href="#azure-pipelines" aria-hidden="true">#</a> Azure Pipelines</h2>`,2),w={href:"https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/cache",target:"_blank",rel:"noopener noreferrer"},C=a("code",null,"next build",-1),I=t(`<div class="language-yaml" data-ext="yml"><pre class="language-yaml"><code><span class="token punctuation">-</span> <span class="token key atrule">task</span><span class="token punctuation">:</span> Cache@2
  <span class="token key atrule">displayName</span><span class="token punctuation">:</span> <span class="token string">&#39;Cache .next/cache&#39;</span>
  <span class="token key atrule">inputs</span><span class="token punctuation">:</span>
    <span class="token key atrule">key</span><span class="token punctuation">:</span> next <span class="token punctuation">|</span> $(Agent.OS) <span class="token punctuation">|</span> yarn.lock
    <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">&#39;$(System.DefaultWorkingDirectory)/.next/cache&#39;</span>

</code></pre></div>`,1);function j(N,$){const e=o("ExternalLinkIcon");return p(),i("div",null,[u,a("p",null,[n("If you do not have a"),r,n("key, please follow CircleCI's"),a("a",d,[n("documentation on setting up build caching"),s(e)]),n(".")]),h,a("p",null,[n("Use"),a("a",k,[n("Netlify Plugins"),s(e)]),n("with"),a("a",g,[y,s(e)]),n(".")]),m,a("p",null,[n("Using GitHub's"),a("a",f,[n("actions/cache"),s(e)]),n(", add the following step in your workflow file:")]),_,a("p",null,[n("Using Heroku's"),a("a",b,[n("custom cache"),s(e)]),n(", add a"),x,n("array in your top-level package.json:")]),v,a("p",null,[n("Using Azure Pipelines'"),a("a",w,[n("Cache task"),s(e)]),n(", add the following task to your pipeline yaml file somewhere prior to the task that executes"),C,n(":")]),I])}const A=c(l,[["render",j],["__file","ci-build-caching.html.vue"]]);export{A as default};
