import{_ as o,r as p,o as c,c as u,b as n,d as s,e as t,a as e}from"./app.1ad2624e.js";const l={},i=n("h1",{id:"customizing-babel-config",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#customizing-babel-config","aria-hidden":"true"},"#"),s(" Customizing Babel Config")],-1),r={class:"custom-container details"},d=n("summary",null,"示例",-1),k={href:"https://github.com/vercel/next.js/tree/canary/examples/with-custom-babel-config",target:"_blank",rel:"noopener noreferrer"},b=e(`<p>Next.js includes the<code>next/babel</code>preset to your app, which includes everything needed to compile React applications and server-side code. But if you want to extend the default Babel configs, it&#39;s also possible.</p><p>To start, you only need to define a<code>.babelrc</code>file (or<code>babel.config.js</code>) at the top of your app. If such a file is found, it will be considered as thesource of truth, and therefore it needs to define what Next.js needs as well, which is the<code>next/babel</code>preset.</p><p>Here&#39;s an example<code>.babelrc</code>file:</p><div class="language-json" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;presets&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;next/babel&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>

</code></pre></div>`,4),g={href:"https://github.com/vercel/next.js/blob/canary/packages/next/build/babel/preset.ts",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"next/babel",-1),f=e(`<p>To add presets/plugins<strong>without configuring them</strong>, you can do it this way:</p><div class="language-json" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;presets&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;next/babel&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;@babel/plugin-proposal-do-expressions&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>

</code></pre></div><p>To add presets/plugins<strong>with custom configuration</strong>, do it on the<code>next/babel</code>preset like so:</p><div class="language-json" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;presets&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span>
      <span class="token string">&quot;next/babel&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;preset-env&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;transform-runtime&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;styled-jsx&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;class-properties&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>

</code></pre></div><p>To learn more about the available options for each config, visit their documentation site.</p><blockquote><p>Next.js uses the<strong>current</strong>Node.js version for server-side compilations.</p></blockquote><blockquote><p>The<code>modules</code>option on<code>&quot;preset-env&quot;</code>should be kept to<code>false</code>, otherwise webpack code splitting is turned off.</p></blockquote>`,7);function q(_,m){const a=p("ExternalLinkIcon");return c(),u("div",null,[i,n("details",r,[d,n("ul",null,[n("li",null,[n("a",k,[s("Customizing babel configuration"),t(a)])])])]),b,n("p",null,[s("You can"),n("a",g,[s("take a look at this file"),t(a)]),s("to learn about the presets included by"),h,s(".")]),f])}const y=o(l,[["render",q],["__file","customizing-babel-config.html.vue"]]);export{y as default};
